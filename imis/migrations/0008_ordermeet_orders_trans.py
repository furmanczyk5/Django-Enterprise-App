# -*- coding: utf-8 -*-
# Generated by Django 1.10.4 on 2017-12-21 19:06
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('imis', '0007_npc18_speakers_temp'),
    ]

    operations = [
        migrations.CreateModel(
            name='OrderMeet',
            fields=[
                ('order_number', models.DecimalField(db_column='ORDER_NUMBER', decimal_places=2, max_digits=15, primary_key=True, serialize=False)),
                ('meeting', models.CharField(db_column='MEETING', max_length=10)),
                ('registrant_class', models.CharField(db_column='REGISTRANT_CLASS', max_length=5)),
                ('arrival', models.DateTimeField(blank=True, db_column='ARRIVAL', null=True)),
                ('departure', models.DateTimeField(blank=True, db_column='DEPARTURE', null=True)),
                ('hotel', models.CharField(db_column='HOTEL', max_length=40)),
                ('lodging_instructions', models.CharField(db_column='LODGING_INSTRUCTIONS', max_length=255)),
                ('booth', models.CharField(db_column='BOOTH', max_length=255)),
                ('guest_first', models.CharField(db_column='GUEST_FIRST', max_length=20)),
                ('guest_middle', models.CharField(db_column='GUEST_MIDDLE', max_length=20)),
                ('guest_last', models.CharField(db_column='GUEST_LAST', max_length=30)),
                ('guest_is_spouse', models.BooleanField(db_column='GUEST_IS_SPOUSE')),
                ('additional_badges', models.TextField(blank=True, db_column='ADDITIONAL_BADGES', null=True)),
                ('delegate', models.CharField(db_column='DELEGATE', max_length=10)),
                ('uf_1', models.BooleanField(db_column='UF_1')),
                ('uf_2', models.BooleanField(db_column='UF_2')),
                ('uf_3', models.BooleanField(db_column='UF_3')),
                ('uf_4', models.BooleanField(db_column='UF_4')),
                ('uf_5', models.BooleanField(db_column='UF_5')),
                ('uf_6', models.CharField(db_column='UF_6', max_length=100)),
                ('uf_7', models.CharField(db_column='UF_7', max_length=100)),
                ('uf_8', models.CharField(db_column='UF_8', max_length=100)),
                ('share_status', models.IntegerField(db_column='SHARE_STATUS')),
                ('share_order_number', models.DecimalField(db_column='SHARE_ORDER_NUMBER', decimal_places=2, max_digits=15)),
                ('room_type', models.CharField(db_column='ROOM_TYPE', max_length=8)),
                ('room_quantity', models.IntegerField(db_column='ROOM_QUANTITY')),
                ('room_confirm', models.BooleanField(db_column='ROOM_CONFIRM')),
                ('uf_9', models.TextField(blank=True, db_column='UF_9', null=True)),
                ('uf_10', models.TextField(blank=True, db_column='UF_10', null=True)),
                ('arrival_time', models.DateTimeField(blank=True, db_column='ARRIVAL_TIME', null=True)),
                ('departure_time', models.DateTimeField(blank=True, db_column='DEPARTURE_TIME', null=True)),
                ('comp_registrations', models.IntegerField(db_column='COMP_REGISTRATIONS')),
                ('comp_reg_source', models.DecimalField(blank=True, db_column='COMP_REG_SOURCE', decimal_places=6, max_digits=15, null=True)),
                ('total_square_feet', models.DecimalField(db_column='TOTAL_SQUARE_FEET', decimal_places=2, max_digits=15)),
                ('comp_registrations_used', models.IntegerField(db_column='COMP_REGISTRATIONS_USED')),
                ('parent_order_number', models.DecimalField(blank=True, db_column='PARENT_ORDER_NUMBER', decimal_places=2, max_digits=15, null=True)),
                ('registered_by_id', models.CharField(blank=True, db_column='REGISTERED_BY_ID', max_length=10, null=True)),
            ],
            options={
                'db_table': 'Order_Meet',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Orders',
            fields=[
                ('order_number', models.DecimalField(db_column='ORDER_NUMBER', decimal_places=2, max_digits=15, primary_key=True, serialize=False)),
                ('org_code', models.CharField(db_column='ORG_CODE', max_length=5)),
                ('order_type_code', models.CharField(db_column='ORDER_TYPE_CODE', max_length=10)),
                ('stage', models.CharField(db_column='STAGE', max_length=10)),
                ('source_system', models.CharField(db_column='SOURCE_SYSTEM', max_length=10)),
                ('batch_num', models.CharField(db_column='BATCH_NUM', max_length=15)),
                ('status', models.CharField(db_column='STATUS', max_length=10)),
                ('hold_code', models.CharField(db_column='HOLD_CODE', max_length=10)),
                ('order_date', models.DateTimeField(blank=True, db_column='ORDER_DATE', null=True)),
                ('bt_id', models.CharField(db_column='BT_ID', max_length=10)),
                ('st_id', models.CharField(db_column='ST_ID', max_length=10)),
                ('st_address_num', models.IntegerField(db_column='ST_ADDRESS_NUM')),
                ('entered_date_time', models.DateTimeField(blank=True, db_column='ENTERED_DATE_TIME', null=True)),
                ('entered_by', models.CharField(db_column='ENTERED_BY', max_length=60)),
                ('updated_date_time', models.DateTimeField(blank=True, db_column='UPDATED_DATE_TIME', null=True)),
                ('updated_by', models.CharField(db_column='UPDATED_BY', max_length=60)),
                ('invoice_reference_num', models.IntegerField(db_column='INVOICE_REFERENCE_NUM')),
                ('invoice_number', models.IntegerField(db_column='INVOICE_NUMBER')),
                ('invoice_date', models.DateTimeField(blank=True, db_column='INVOICE_DATE', null=True)),
                ('number_lines', models.IntegerField(db_column='NUMBER_LINES')),
                ('full_name', models.CharField(db_column='FULL_NAME', max_length=70)),
                ('title', models.CharField(db_column='TITLE', max_length=80)),
                ('company', models.CharField(db_column='COMPANY', max_length=80)),
                ('full_address', models.CharField(db_column='FULL_ADDRESS', max_length=255)),
                ('prefix', models.CharField(db_column='PREFIX', max_length=25)),
                ('first_name', models.CharField(db_column='FIRST_NAME', max_length=20)),
                ('middle_name', models.CharField(db_column='MIDDLE_NAME', max_length=20)),
                ('last_name', models.CharField(db_column='LAST_NAME', max_length=30)),
                ('suffix', models.CharField(db_column='SUFFIX', max_length=10)),
                ('designation', models.CharField(db_column='DESIGNATION', max_length=30)),
                ('informal', models.CharField(db_column='INFORMAL', max_length=20)),
                ('last_first', models.CharField(db_column='LAST_FIRST', max_length=30)),
                ('company_sort', models.CharField(db_column='COMPANY_SORT', max_length=30)),
                ('address_1', models.CharField(db_column='ADDRESS_1', max_length=40)),
                ('address_2', models.CharField(db_column='ADDRESS_2', max_length=40)),
                ('city', models.CharField(db_column='CITY', max_length=40)),
                ('state_province', models.CharField(db_column='STATE_PROVINCE', max_length=15)),
                ('zip', models.CharField(db_column='ZIP', max_length=10)),
                ('country', models.CharField(db_column='COUNTRY', max_length=25)),
                ('dpb', models.CharField(db_column='DPB', max_length=8)),
                ('bar_code', models.CharField(db_column='BAR_CODE', max_length=14)),
                ('address_format', models.SmallIntegerField(db_column='ADDRESS_FORMAT')),
                ('phone', models.CharField(db_column='PHONE', max_length=25)),
                ('fax', models.CharField(db_column='FAX', max_length=25)),
                ('notes', models.TextField(blank=True, db_column='NOTES', null=True)),
                ('total_charges', models.DecimalField(db_column='TOTAL_CHARGES', decimal_places=4, max_digits=19)),
                ('total_payments', models.DecimalField(db_column='TOTAL_PAYMENTS', decimal_places=4, max_digits=19)),
                ('balance', models.DecimalField(db_column='BALANCE', decimal_places=4, max_digits=19)),
                ('line_total', models.DecimalField(db_column='LINE_TOTAL', decimal_places=4, max_digits=19)),
                ('line_taxable', models.DecimalField(db_column='LINE_TAXABLE', decimal_places=4, max_digits=19)),
                ('freight_1', models.DecimalField(db_column='FREIGHT_1', decimal_places=4, max_digits=19)),
                ('freight_2', models.DecimalField(db_column='FREIGHT_2', decimal_places=4, max_digits=19)),
                ('handling_1', models.DecimalField(db_column='HANDLING_1', decimal_places=4, max_digits=19)),
                ('handling_2', models.DecimalField(db_column='HANDLING_2', decimal_places=4, max_digits=19)),
                ('cancellation_fee', models.DecimalField(db_column='CANCELLATION_FEE', decimal_places=4, max_digits=19)),
                ('tax_1', models.DecimalField(db_column='TAX_1', decimal_places=4, max_digits=19)),
                ('tax_2', models.DecimalField(db_column='TAX_2', decimal_places=4, max_digits=19)),
                ('tax_3', models.DecimalField(db_column='TAX_3', decimal_places=4, max_digits=19)),
                ('line_pay', models.DecimalField(db_column='LINE_PAY', decimal_places=4, max_digits=19)),
                ('other_pay', models.DecimalField(db_column='OTHER_PAY', decimal_places=4, max_digits=19)),
                ('ar_pay', models.DecimalField(db_column='AR_PAY', decimal_places=4, max_digits=19)),
                ('tax_author_1', models.CharField(db_column='TAX_AUTHOR_1', max_length=15)),
                ('tax_author_2', models.CharField(db_column='TAX_AUTHOR_2', max_length=15)),
                ('tax_author_3', models.CharField(db_column='TAX_AUTHOR_3', max_length=15)),
                ('tax_rate_1', models.DecimalField(db_column='TAX_RATE_1', decimal_places=4, max_digits=15)),
                ('tax_rate_2', models.DecimalField(db_column='TAX_RATE_2', decimal_places=4, max_digits=15)),
                ('tax_rate_3', models.DecimalField(db_column='TAX_RATE_3', decimal_places=4, max_digits=15)),
                ('tax_exempt', models.CharField(db_column='TAX_EXEMPT', max_length=15)),
                ('terms_code', models.CharField(db_column='TERMS_CODE', max_length=5)),
                ('scheduled_date', models.DateTimeField(blank=True, db_column='SCHEDULED_DATE', null=True)),
                ('confirmation_date_time', models.DateTimeField(blank=True, db_column='CONFIRMATION_DATE_TIME', null=True)),
                ('ship_papers_date_time', models.DateTimeField(blank=True, db_column='SHIP_PAPERS_DATE_TIME', null=True)),
                ('shipped_date_time', models.DateTimeField(blank=True, db_column='SHIPPED_DATE_TIME', null=True)),
                ('bo_released_date_time', models.DateTimeField(blank=True, db_column='BO_RELEASED_DATE_TIME', null=True)),
                ('source_code', models.CharField(db_column='SOURCE_CODE', max_length=40)),
                ('salesman', models.CharField(db_column='SALESMAN', max_length=15)),
                ('commission_rate', models.DecimalField(db_column='COMMISSION_RATE', decimal_places=2, max_digits=15)),
                ('discount_rate', models.DecimalField(db_column='DISCOUNT_RATE', decimal_places=2, max_digits=15)),
                ('priority', models.IntegerField(db_column='PRIORITY')),
                ('hold_comment', models.CharField(db_column='HOLD_COMMENT', max_length=255)),
                ('affect_inventory', models.BooleanField(db_column='AFFECT_INVENTORY')),
                ('hold_flag', models.BooleanField(db_column='HOLD_FLAG')),
                ('customer_reference', models.CharField(db_column='CUSTOMER_REFERENCE', max_length=40)),
                ('valuation_basis', models.SmallIntegerField(db_column='VALUATION_BASIS')),
                ('undiscounted_total', models.DecimalField(db_column='UNDISCOUNTED_TOTAL', decimal_places=4, max_digits=19)),
                ('auto_calc_handling', models.BooleanField(db_column='AUTO_CALC_HANDLING')),
                ('auto_calc_restocking', models.BooleanField(db_column='AUTO_CALC_RESTOCKING')),
                ('backorders', models.SmallIntegerField(db_column='BACKORDERS')),
                ('member_type', models.CharField(db_column='MEMBER_TYPE', max_length=5)),
                ('pay_type', models.CharField(db_column='PAY_TYPE', max_length=10)),
                ('pay_number', models.CharField(db_column='PAY_NUMBER', max_length=25)),
                ('credit_card_expires', models.CharField(db_column='CREDIT_CARD_EXPIRES', max_length=10)),
                ('authorize', models.CharField(db_column='AUTHORIZE', max_length=10)),
                ('credit_card_name', models.CharField(db_column='CREDIT_CARD_NAME', max_length=30)),
                ('bo_status', models.SmallIntegerField(db_column='BO_STATUS')),
                ('bo_release_date', models.DateTimeField(blank=True, db_column='BO_RELEASE_DATE', null=True)),
                ('total_quantity_ordered', models.DecimalField(db_column='TOTAL_QUANTITY_ORDERED', decimal_places=4, max_digits=15)),
                ('total_quantity_backordered', models.DecimalField(db_column='TOTAL_QUANTITY_BACKORDERED', decimal_places=4, max_digits=15)),
                ('ship_method', models.CharField(db_column='SHIP_METHOD', max_length=10)),
                ('total_weight', models.DecimalField(db_column='TOTAL_WEIGHT', decimal_places=2, max_digits=15)),
                ('cash_gl_acct', models.CharField(db_column='CASH_GL_ACCT', max_length=30)),
                ('line_pst_taxable', models.DecimalField(db_column='LINE_PST_TAXABLE', decimal_places=4, max_digits=19)),
                ('intent_to_edit', models.CharField(db_column='INTENT_TO_EDIT', max_length=80)),
                ('prepaid_invoice_reference_num', models.IntegerField(db_column='PREPAID_INVOICE_REFERENCE_NUM')),
                ('auto_calc_freight', models.BooleanField(db_column='AUTO_CALC_FREIGHT')),
                ('co_id', models.CharField(db_column='CO_ID', max_length=10)),
                ('co_member_type', models.CharField(db_column='CO_MEMBER_TYPE', max_length=5)),
                ('email', models.CharField(db_column='EMAIL', max_length=100)),
                ('crrt', models.CharField(db_column='CRRT', max_length=40)),
                ('address_status', models.CharField(db_column='ADDRESS_STATUS', max_length=5)),
                ('recognized_cash_amount', models.DecimalField(db_column='RECOGNIZED_CASH_AMOUNT', decimal_places=4, max_digits=19)),
                ('is_fr_order', models.SmallIntegerField(db_column='IS_FR_ORDER')),
                ('vat_tax_code_fh', models.CharField(blank=True, db_column='VAT_TAX_CODE_FH', max_length=31, null=True)),
                ('encrypt_pay_number', models.CharField(db_column='ENCRYPT_PAY_NUMBER', max_length=100)),
                ('encrypt_credit_card_expires', models.CharField(db_column='ENCRYPT_CREDIT_CARD_EXPIRES', max_length=100)),
                ('auto_freight_type', models.SmallIntegerField(db_column='AUTO_FREIGHT_TYPE')),
                ('use_member_price', models.BooleanField(db_column='USE_MEMBER_PRICE')),
                ('st_print_company', models.BooleanField(db_column='ST_PRINT_COMPANY')),
                ('st_print_title', models.BooleanField(db_column='ST_PRINT_TITLE')),
                ('toll_free', models.CharField(db_column='TOLL_FREE', max_length=25)),
                ('mail_code', models.CharField(db_column='MAIL_CODE', max_length=5)),
                ('address_3', models.CharField(db_column='ADDRESS_3', max_length=40)),
                ('encrypt_csc', models.CharField(db_column='ENCRYPT_CSC', max_length=100)),
                ('issue_date', models.CharField(db_column='ISSUE_DATE', max_length=10)),
                ('issue_number', models.CharField(db_column='ISSUE_NUMBER', max_length=2)),
                ('more_payments', models.DecimalField(db_column='MORE_PAYMENTS', decimal_places=2, max_digits=15)),
                ('gateway_ref', models.CharField(db_column='GATEWAY_REF', max_length=100)),
                ('originating_trans_num', models.IntegerField(db_column='ORIGINATING_TRANS_NUM')),
                ('freight_tax', models.DecimalField(db_column='FREIGHT_TAX', decimal_places=4, max_digits=19)),
                ('handling_tax', models.DecimalField(db_column='HANDLING_TAX', decimal_places=4, max_digits=19)),
                ('tax_rate_fh', models.DecimalField(db_column='TAX_RATE_FH', decimal_places=4, max_digits=15)),
                ('discount_code', models.CharField(db_column='DISCOUNT_CODE', max_length=50)),
            ],
            options={
                'db_table': 'Orders',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Trans',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trans_number', models.IntegerField(db_column='TRANS_NUMBER')),
                ('line_number', models.IntegerField(db_column='LINE_NUMBER')),
                ('batch_num', models.CharField(db_column='BATCH_NUM', max_length=15)),
                ('owner_org_code', models.CharField(db_column='OWNER_ORG_CODE', max_length=10)),
                ('source_system', models.CharField(db_column='SOURCE_SYSTEM', max_length=10)),
                ('journal_type', models.CharField(db_column='JOURNAL_TYPE', max_length=5)),
                ('transaction_type', models.CharField(db_column='TRANSACTION_TYPE', max_length=5)),
                ('transaction_date', models.DateTimeField(db_column='TRANSACTION_DATE')),
                ('bt_id', models.CharField(db_column='BT_ID', max_length=10)),
                ('st_id', models.CharField(db_column='ST_ID', max_length=10)),
                ('invoice_reference_num', models.IntegerField(db_column='INVOICE_REFERENCE_NUM')),
                ('description', models.CharField(db_column='DESCRIPTION', max_length=255)),
                ('customer_name', models.CharField(db_column='CUSTOMER_NAME', max_length=60)),
                ('customer_reference', models.CharField(db_column='CUSTOMER_REFERENCE', max_length=40)),
                ('reference_1', models.CharField(db_column='REFERENCE_1', max_length=50)),
                ('source_code', models.CharField(db_column='SOURCE_CODE', max_length=40)),
                ('product_code', models.CharField(db_column='PRODUCT_CODE', max_length=31)),
                ('effective_date', models.DateTimeField(blank=True, db_column='EFFECTIVE_DATE', null=True)),
                ('paid_thru', models.DateTimeField(blank=True, db_column='PAID_THRU', null=True)),
                ('months_paid', models.IntegerField(db_column='MONTHS_PAID')),
                ('fiscal_period', models.IntegerField(db_column='FISCAL_PERIOD')),
                ('deferral_months', models.IntegerField(db_column='DEFERRAL_MONTHS')),
                ('amount', models.DecimalField(db_column='AMOUNT', decimal_places=4, max_digits=19)),
                ('adjustment_amount', models.DecimalField(db_column='ADJUSTMENT_AMOUNT', decimal_places=4, max_digits=19)),
                ('pseudo_account', models.CharField(db_column='PSEUDO_ACCOUNT', max_length=50)),
                ('gl_acct_org_code', models.CharField(db_column='GL_ACCT_ORG_CODE', max_length=5)),
                ('gl_account', models.CharField(db_column='GL_ACCOUNT', max_length=50)),
                ('deferred_gl_account', models.CharField(db_column='DEFERRED_GL_ACCOUNT', max_length=50)),
                ('invoice_charges', models.DecimalField(db_column='INVOICE_CHARGES', decimal_places=4, max_digits=19)),
                ('invoice_credits', models.DecimalField(db_column='INVOICE_CREDITS', decimal_places=4, max_digits=19)),
                ('quantity', models.DecimalField(db_column='QUANTITY', decimal_places=4, max_digits=15)),
                ('unit_price', models.DecimalField(db_column='UNIT_PRICE', decimal_places=4, max_digits=19)),
                ('payment_type', models.CharField(db_column='PAYMENT_TYPE', max_length=10)),
                ('check_number', models.CharField(db_column='CHECK_NUMBER', max_length=10)),
                ('cc_number', models.CharField(db_column='CC_NUMBER', max_length=25)),
                ('cc_expire', models.CharField(db_column='CC_EXPIRE', max_length=10)),
                ('cc_authorize', models.CharField(db_column='CC_AUTHORIZE', max_length=10)),
                ('cc_name', models.CharField(db_column='CC_NAME', max_length=40)),
                ('terms_code', models.CharField(db_column='TERMS_CODE', max_length=5)),
                ('activity_seqn', models.IntegerField(db_column='ACTIVITY_SEQN')),
                ('posted', models.SmallIntegerField(db_column='POSTED')),
                ('prod_type', models.CharField(db_column='PROD_TYPE', max_length=5)),
                ('activity_type', models.CharField(db_column='ACTIVITY_TYPE', max_length=10)),
                ('action_codes', models.CharField(db_column='ACTION_CODES', max_length=255)),
                ('tickler_date', models.DateTimeField(blank=True, db_column='TICKLER_DATE', null=True)),
                ('date_entered', models.DateTimeField(blank=True, db_column='DATE_ENTERED', null=True)),
                ('entered_by', models.CharField(db_column='ENTERED_BY', max_length=60)),
                ('sub_line_number', models.IntegerField(db_column='SUB_LINE_NUMBER')),
                ('install_bill_date', models.DateTimeField(blank=True, db_column='INSTALL_BILL_DATE', null=True)),
                ('taxable_value', models.DecimalField(db_column='TAXABLE_VALUE', decimal_places=4, max_digits=19)),
                ('solicitor_id', models.CharField(db_column='SOLICITOR_ID', max_length=10)),
                ('invoice_adjustments', models.DecimalField(db_column='INVOICE_ADJUSTMENTS', decimal_places=4, max_digits=19)),
                ('invoice_line_num', models.IntegerField(db_column='INVOICE_LINE_NUM')),
                ('merge_code', models.CharField(db_column='MERGE_CODE', max_length=40)),
                ('salutation_code', models.CharField(db_column='SALUTATION_CODE', max_length=40)),
                ('sender_code', models.CharField(db_column='SENDER_CODE', max_length=40)),
                ('is_match_gift', models.SmallIntegerField(db_column='IS_MATCH_GIFT')),
                ('match_gift_trans_num', models.IntegerField(db_column='MATCH_GIFT_TRANS_NUM')),
                ('match_activity_seqn', models.IntegerField(db_column='MATCH_ACTIVITY_SEQN')),
                ('mem_trib_id', models.CharField(db_column='MEM_TRIB_ID', max_length=10)),
                ('receipt_id', models.IntegerField(db_column='RECEIPT_ID')),
                ('do_not_receipt', models.SmallIntegerField(db_column='DO_NOT_RECEIPT')),
                ('cc_status', models.CharField(db_column='CC_STATUS', max_length=1)),
                ('encrypt_cc_number', models.CharField(db_column='ENCRYPT_CC_NUMBER', max_length=100)),
                ('encrypt_cc_expire', models.CharField(db_column='ENCRYPT_CC_EXPIRE', max_length=100)),
                ('fr_activity', models.CharField(db_column='FR_ACTIVITY', max_length=1)),
                ('fr_activity_seqn', models.IntegerField(db_column='FR_ACTIVITY_SEQN')),
                ('mem_trib_name_text', models.CharField(db_column='MEM_TRIB_NAME_TEXT', max_length=100)),
                ('campaign_code', models.CharField(db_column='CAMPAIGN_CODE', max_length=10)),
                ('is_fr_item', models.BooleanField(db_column='IS_FR_ITEM')),
                ('encrypt_csc', models.CharField(db_column='ENCRYPT_CSC', max_length=100)),
                ('issue_date', models.CharField(db_column='ISSUE_DATE', max_length=10)),
                ('issue_number', models.CharField(db_column='ISSUE_NUMBER', max_length=2)),
                ('gl_export_date', models.DateTimeField(blank=True, db_column='GL_EXPORT_DATE', null=True)),
                ('fr_checkbox', models.BooleanField(db_column='FR_CHECKBOX')),
                ('gateway_ref', models.CharField(db_column='GATEWAY_REF', max_length=100)),
                ('tax_authority', models.CharField(db_column='TAX_AUTHORITY', max_length=15)),
                ('tax_rate', models.DecimalField(db_column='TAX_RATE', decimal_places=4, max_digits=15)),
                ('tax_1', models.DecimalField(db_column='TAX_1', decimal_places=4, max_digits=15)),
                ('price_adj', models.BooleanField(db_column='PRICE_ADJ')),
            ],
            options={
                'db_table': 'Trans',
                'managed': False,
            },
        ),
    ]
