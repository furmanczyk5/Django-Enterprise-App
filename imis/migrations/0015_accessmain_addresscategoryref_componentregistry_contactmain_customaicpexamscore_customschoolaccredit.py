# -*- coding: utf-8 -*-
# Generated by Django 1.11.10 on 2019-12-17 23:11
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('imis', '0014_meetresources'),
    ]

    operations = [
        migrations.CreateModel(
            name='Accessmain',
            fields=[
                ('accesskey', models.CharField(db_column='AccessKey', max_length=36, primary_key=True, serialize=False)),
                ('accessscope', models.CharField(db_column='AccessScope', max_length=20)),
                ('createdon', models.DateTimeField(db_column='CreatedOn')),
                ('updatedon', models.DateTimeField(db_column='UpdatedOn')),
                ('markedfordeleteon', models.DateTimeField(blank=True, db_column='MarkedForDeleteOn', null=True)),
            ],
            options={
                'db_table': 'AccessMain',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Addresscategoryref',
            fields=[
                ('addresscategorycode', models.IntegerField(db_column='AddressCategoryCode', primary_key=True, serialize=False)),
                ('addresscategorydesc', models.CharField(db_column='AddressCategoryDesc', max_length=50, unique=True)),
                ('isphysicaladdress', models.BooleanField(db_column='IsPhysicalAddress')),
                ('addresscategoryname', models.CharField(db_column='AddressCategoryName', max_length=20, unique=True)),
                ('formatmask', models.CharField(blank=True, db_column='FormatMask', max_length=255, null=True)),
            ],
            options={
                'db_table': 'AddressCategoryRef',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Componentregistry',
            fields=[
                ('componentkey', models.CharField(db_column='ComponentKey', max_length=36, primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='Name', max_length=50)),
                ('description', models.CharField(db_column='Description', max_length=1000)),
                ('interfacename', models.CharField(db_column='InterfaceName', max_length=100)),
                ('typename', models.CharField(db_column='TypeName', max_length=200)),
                ('assemblyname', models.CharField(db_column='AssemblyName', max_length=100)),
                ('configurewebusercontrol', models.CharField(blank=True, db_column='ConfigureWebUserControl', max_length=128, null=True)),
                ('configurewindowscontrol', models.CharField(blank=True, db_column='ConfigureWindowsControl', max_length=128, null=True)),
                ('istyped', models.BooleanField(db_column='IsTyped')),
                ('isbusinessitem', models.BooleanField(db_column='IsBusinessItem')),
                ('componentsummarycontentkey', models.CharField(blank=True, db_column='ComponentSummaryContentKey', max_length=36, null=True)),
                ('componentnewlink', models.CharField(blank=True, db_column='ComponentNewLink', max_length=768, null=True)),
                ('componenteditlink', models.CharField(blank=True, db_column='ComponentEditLink', max_length=768, null=True)),
                ('componentexecutelink', models.CharField(blank=True, db_column='ComponentExecuteLink', max_length=768, null=True)),
                ('deploymentpackagecode', models.CharField(blank=True, db_column='DeploymentPackageCode', max_length=50, null=True)),
                ('markedfordeleteon', models.DateTimeField(blank=True, db_column='MarkedForDeleteOn', null=True)),
            ],
            options={
                'db_table': 'ComponentRegistry',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CustomAICPExamScore',
            fields=[
                ('id', models.CharField(db_column='ID', max_length=10, primary_key=True, serialize=False)),
                ('seqn', models.IntegerField(db_column='SEQN', primary_key=True)),
                ('exam_code', models.CharField(blank=True, db_column='EXAM_CODE', max_length=15, null=True)),
                ('exam_date', models.DateTimeField(blank=True, db_column='EXAM_DATE', null=True)),
                ('pass_field', models.BooleanField(db_column='PASS')),
                ('scaled_score', models.FloatField(blank=True, db_column='SCALED_SCORE', null=True)),
                ('raw_score', models.FloatField(blank=True, db_column='RAW_SCORE', null=True)),
                ('score_1', models.FloatField(blank=True, db_column='SCORE_1', null=True)),
                ('score_2', models.FloatField(blank=True, db_column='SCORE_2', null=True)),
                ('score_3', models.FloatField(blank=True, db_column='SCORE_3', null=True)),
                ('score_4', models.FloatField(blank=True, db_column='SCORE_4', null=True)),
                ('score_5', models.FloatField(blank=True, db_column='SCORE_5', null=True)),
                ('score_6', models.FloatField(blank=True, db_column='SCORE_6', default=0, null=True)),
                ('score_7', models.FloatField(blank=True, db_column='SCORE_7', default=0, null=True)),
                ('score_8', models.FloatField(blank=True, db_column='SCORE_8', default=0, null=True)),
                ('testform_code', models.CharField(blank=True, db_column='TESTFORM_CODE', max_length=50, null=True)),
                ('test_center', models.CharField(blank=True, db_column='TEST_CENTER', max_length=20, null=True)),
                ('registrant_type', models.CharField(blank=True, db_column='REGISTRANT_TYPE', max_length=50, null=True)),
                ('file_name', models.CharField(blank=True, db_column='FILE_NAME', max_length=255, null=True)),
                ('gee_eligibility_id', models.CharField(blank=True, db_column='GEE_ELIGIBILITY_ID', max_length=50, null=True)),
            ],
            options={
                'db_table': 'Custom_AICP_Exam_Score',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CustomSchoolaccreditedPostUpgrade',
            fields=[
                ('id', models.CharField(db_column='ID', max_length=10)),
                ('seqn', models.IntegerField(db_column='SEQN', primary_key=True, serialize=False)),
                ('start_date', models.DateTimeField(blank=True, db_column='START_DATE', null=True)),
                ('end_date', models.DateTimeField(blank=True, db_column='END_DATE', null=True)),
                ('degree_level', models.CharField(db_column='DEGREE_LEVEL', max_length=60)),
                ('school_program_type', models.CharField(db_column='SCHOOL_PROGRAM_TYPE', max_length=20)),
                ('degree_program', models.CharField(db_column='DEGREE_PROGRAM', max_length=255)),
                ('old_seqn', models.IntegerField(db_column='OLD_SEQN')),
            ],
            options={
                'db_table': 'Custom_SchoolAccredited_PostUpgrade',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Gifthistorysummary',
            fields=[
                ('donorid', models.CharField(db_column='DonorId', max_length=10, primary_key=True, serialize=False)),
                ('firstgiftdate', models.DateTimeField(blank=True, db_column='FirstGiftDate', null=True)),
                ('firstgiftamount', models.DecimalField(blank=True, db_column='FirstGiftAmount', decimal_places=4, max_digits=19, null=True)),
                ('firstgiftappeal', models.CharField(blank=True, db_column='FirstGiftAppeal', max_length=40, null=True)),
                ('nextlastgiftdate', models.DateTimeField(blank=True, db_column='NextLastGiftDate', null=True)),
                ('nextlastgiftamount', models.DecimalField(blank=True, db_column='NextLastGiftAmount', decimal_places=4, max_digits=19, null=True)),
                ('nextlastgiftappeal', models.CharField(blank=True, db_column='NextLastGiftAppeal', max_length=40, null=True)),
                ('lastgiftdate', models.DateTimeField(blank=True, db_column='LastGiftDate', null=True)),
                ('lastgiftamount', models.DecimalField(blank=True, db_column='LastGiftAmount', decimal_places=4, max_digits=19, null=True)),
                ('lastgiftappeal', models.CharField(blank=True, db_column='LastGiftAppeal', max_length=40, null=True)),
                ('lowestgiftamount', models.DecimalField(blank=True, db_column='LowestGiftAmount', decimal_places=4, max_digits=19, null=True)),
                ('highestgiftamount', models.DecimalField(blank=True, db_column='HighestGiftAmount', decimal_places=4, max_digits=19, null=True)),
                ('numberofgifts', models.IntegerField(blank=True, db_column='NumberOfGifts', null=True)),
                ('lifetimegiftvalue', models.DecimalField(blank=True, db_column='LifetimeGiftValue', decimal_places=4, max_digits=19, null=True)),
                ('averagegiftvalue', models.DecimalField(blank=True, db_column='AverageGiftValue', decimal_places=4, max_digits=19, null=True)),
                ('consecutiveyearsgiving', models.IntegerField(blank=True, db_column='ConsecutiveYearsGiving', null=True)),
                ('highesttransnumprocessed', models.IntegerField(db_column='HighestTransNumProcessed')),
                ('lastupdatedon', models.DateTimeField(db_column='LastUpdatedOn')),
            ],
            options={
                'db_table': 'GiftHistorySummary',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Giftreport',
            fields=[
                ('id', models.CharField(db_column='ID', max_length=10, primary_key=True, serialize=False)),
                ('originaltransaction', models.IntegerField(db_column='OriginalTransaction')),
                ('transactionnumber', models.IntegerField(db_column='TransactionNumber')),
                ('sourcesystem', models.CharField(db_column='SourceSystem', max_length=10)),
                ('transactiondate', models.DateTimeField(blank=True, db_column='TransactionDate', null=True)),
                ('datereceived', models.DateTimeField(blank=True, db_column='DateReceived', null=True)),
                ('amount', models.DecimalField(db_column='Amount', decimal_places=2, max_digits=15)),
                ('fund', models.CharField(db_column='Fund', max_length=10)),
                ('appealcode', models.CharField(db_column='AppealCode', max_length=40)),
                ('solicitorid', models.CharField(db_column='SolicitorID', max_length=10)),
                ('checknumber', models.CharField(db_column='CheckNumber', max_length=10)),
                ('paymenttype', models.CharField(db_column='PaymentType', max_length=11)),
                ('campaigncode', models.CharField(db_column='CampaignCode', max_length=10)),
                ('fiscalyear', models.IntegerField(db_column='FiscalYear')),
                ('fiscalmonth', models.IntegerField(db_column='FiscalMonth')),
                ('gifttype', models.CharField(db_column='GiftType', max_length=30)),
                ('invoicereferencenumber', models.IntegerField(db_column='InvoiceReferenceNumber')),
                ('receiptid', models.IntegerField(db_column='ReceiptID')),
                ('matchingtransaction', models.IntegerField(db_column='MatchingTransaction')),
                ('ismatchinggift', models.SmallIntegerField(db_column='IsMatchingGift')),
                ('memorialid', models.CharField(db_column='MemorialID', max_length=10)),
                ('pledgeid', models.CharField(db_column='PledgeID', max_length=10)),
                ('listas', models.CharField(db_column='ListAs', max_length=255)),
                ('requestnumber', models.DecimalField(db_column='RequestNumber', decimal_places=4, max_digits=15)),
                ('installmentdate', models.DateTimeField(blank=True, db_column='InstallmentDate', null=True)),
                ('memorialnametext', models.CharField(db_column='MemorialNameText', max_length=100)),
                ('fairmktvalue', models.DecimalField(db_column='FairMktValue', decimal_places=4, max_digits=19)),
                ('memorialtributetype', models.CharField(db_column='MemorialTributeType', max_length=10)),
                ('memorialtributemessage', models.TextField(db_column='MemorialTributeMessage')),
                ('note', models.CharField(db_column='Note', max_length=255)),
            ],
            options={
                'db_table': 'GiftReport',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Uniformregistry',
            fields=[
                ('uniformkey', models.CharField(db_column='UniformKey', max_length=36, primary_key=True, serialize=False)),
                ('markedfordeleteon', models.DateTimeField(blank=True, db_column='MarkedForDeleteOn', null=True)),
            ],
            options={
                'db_table': 'UniformRegistry',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Contactmain',
            fields=[
                ('contactkey', models.ForeignKey(db_column='ContactKey', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='imis.Uniformregistry')),
                ('fullname', models.CharField(db_column='FullName', max_length=110)),
                ('sortname', models.CharField(db_column='SortName', max_length=110)),
                ('isinstitute', models.BooleanField(db_column='IsInstitute')),
                ('taxidnumber', models.CharField(blank=True, db_column='TaxIDNumber', max_length=12, null=True)),
                ('nosolicitationflag', models.BooleanField(db_column='NoSolicitationFlag')),
                ('synccontactid', models.CharField(blank=True, db_column='SyncContactID', max_length=20, null=True)),
                ('updatedon', models.DateTimeField(db_column='UpdatedOn')),
                ('isideditable', models.NullBooleanField(db_column='IsIDEditable')),
                ('id', models.CharField(blank=True, db_column='ID', max_length=12, null=True)),
                ('issortnameoverridden', models.BooleanField(db_column='IsSortNameOverridden')),
                ('majorkey', models.CharField(blank=True, db_column='MajorKey', max_length=30, null=True)),
                ('createdon', models.DateTimeField(db_column='CreatedOn')),
                ('textonlyemailflag', models.BooleanField(db_column='TextOnlyEmailFlag')),
                ('optoutflag', models.BooleanField(db_column='OptOutFlag')),
                ('markedfordeleteon', models.DateTimeField(blank=True, db_column='MarkedForDeleteOn', null=True)),
            ],
            options={
                'db_table': 'ContactMain',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Usermain',
            fields=[
                ('userkey', models.ForeignKey(db_column='UserKey', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='imis.Contactmain')),
                ('contactmaster', models.CharField(blank=True, db_column='ContactMaster', max_length=50, null=True)),
                ('userid', models.CharField(db_column='UserId', max_length=60)),
                ('isdisabled', models.BooleanField(db_column='IsDisabled')),
                ('effectivedate', models.DateTimeField(db_column='EffectiveDate')),
                ('expirationdate', models.DateTimeField(blank=True, db_column='ExpirationDate', null=True)),
                ('updatedon', models.DateTimeField(db_column='UpdatedOn')),
                ('createdon', models.DateTimeField(db_column='CreatedOn')),
                ('markedfordeleteon', models.DateTimeField(blank=True, db_column='MarkedForDeleteOn', null=True)),
                ('providerkey', models.CharField(blank=True, db_column='ProviderKey', max_length=100, null=True)),
            ],
            options={
                'db_table': 'UserMain',
                'managed': False,
            },
        ),
    ]
