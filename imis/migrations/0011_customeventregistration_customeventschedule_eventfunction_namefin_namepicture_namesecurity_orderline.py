# -*- coding: utf-8 -*-
# Generated by Django 1.11.10 on 2018-11-16 21:50
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('imis', '0010_productinventory'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomEventRegistration',
            fields=[
                ('id', models.CharField(db_column='ID', max_length=10, primary_key=True, serialize=False)),
                ('seqn', models.IntegerField(db_column='SEQN', default=0, primary_key=True)),
                ('meeting', models.CharField(db_column='MEETING', max_length=10)),
                ('address1', models.CharField(db_column='ADDRESS_1', default='', max_length=40)),
                ('address2', models.CharField(db_column='ADDRESS_2', default='', max_length=40)),
                ('city', models.CharField(db_column='CITY', default='', max_length=40)),
                ('state', models.CharField(db_column='STATE_PROVINCE', default='', max_length=15)),
                ('zip_code', models.CharField(db_column='ZIP', default='', max_length=10)),
                ('country', models.CharField(db_column='COUNTRY', default='', max_length=25)),
                ('badge_name', models.CharField(db_column='BADGE_NAME', max_length=20)),
                ('badge_company', models.CharField(db_column='BADGE_COMPANY', default='', max_length=60)),
                ('badge_location', models.CharField(db_column='BADGE_LOCATION', max_length=60)),
            ],
            options={
                'db_table': 'Custom_Event_Registration',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CustomEventSchedule',
            fields=[
                ('id', models.CharField(db_column='ID', max_length=10, primary_key=True, serialize=False)),
                ('seqn', models.IntegerField(db_column='SEQN')),
                ('meeting', models.CharField(db_column='MEETING', max_length=10)),
                ('registrant_class', models.CharField(db_column='REGISTRANT_CLASS', max_length=10)),
                ('product_code', models.CharField(db_column='PRODUCT_CODE', max_length=31)),
                ('status', models.CharField(db_column='STATUS', max_length=5)),
                ('unit_price', models.DecimalField(db_column='UNIT_PRICE', decimal_places=2, max_digits=8)),
            ],
            options={
                'db_table': 'Custom_Event_Schedule',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EventFunction',
            fields=[
                ('event_id', models.CharField(db_column='EventId', max_length=15)),
                ('event_function_id', models.CharField(db_column='EventFunctionId', max_length=31, primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='Name', max_length=60)),
                ('description', models.TextField(db_column='Description', max_length=2147483647)),
                ('code', models.CharField(db_column='Code', max_length=15)),
                ('image_url', models.CharField(db_column='ImageURL', max_length=100)),
                ('additional_description', models.TextField(db_column='AdditionalDescription', max_length=2147483647)),
                ('financial_entity_id', models.CharField(db_column='FinancialEntityId', max_length=5)),
                ('category_id', models.CharField(db_column='CategoryId', max_length=5)),
                ('category_name', models.CharField(db_column='CategoryName', max_length=5)),
                ('status', models.CharField(db_column='Status', max_length=50)),
                ('start_date_time', models.DateTimeField(db_column='StartDateTime')),
                ('end_date_time', models.DateTimeField(db_column='EndDateTime')),
                ('facility_name', models.CharField(db_column='FacilityName', max_length=100)),
                ('event_function_registration_type_code', models.IntegerField(db_column='EventFunctionRegistrationTypeCode')),
                ('event_track', models.CharField(db_column='EventTrack', max_length=255)),
                ('sort_order', models.IntegerField(db_column='SortOrder')),
                ('event_category', models.CharField(db_column='EventCategory', max_length=255)),
                ('is_event_registration_option', models.IntegerField(db_column='IsEventRegistrationOption')),
                ('capacity', models.IntegerField(db_column='Capacity')),
                ('max_quantity_per_registrant', models.IntegerField(db_column='MaxQuantityPerRegistrant')),
                ('conflict_codes', models.CharField(db_column='ConflictCodes', max_length=10)),
                ('form_definition_section_key', models.CharField(db_column='FormDefinitionSectionKey', max_length=36)),
                ('available_to', models.IntegerField(db_column='AvailableTo')),
                ('is_fund_raising_item', models.IntegerField(db_column='IsFundRaisingItem')),
            ],
            options={
                'db_table': 'vSoaEventFunction',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NameFin',
            fields=[
                ('id', models.CharField(db_column='ID', max_length=10, primary_key=True, serialize=False)),
                ('tax_exempt', models.CharField(db_column='TAX_EXEMPT', max_length=15)),
                ('credit_limit', models.DecimalField(db_column='CREDIT_LIMIT', decimal_places=4, max_digits=19)),
                ('no_statements', models.BooleanField(db_column='NO_STATEMENTS')),
                ('terms_code', models.CharField(db_column='TERMS_CODE', max_length=5)),
                ('backorders', models.SmallIntegerField(db_column='BACKORDERS')),
                ('renew_months', models.DecimalField(db_column='RENEW_MONTHS', decimal_places=4, max_digits=15)),
                ('renewed_thru', models.DateTimeField(blank=True, db_column='RENEWED_THRU', null=True)),
                ('bt_id', models.CharField(db_column='BT_ID', max_length=10)),
                ('tax_author_default', models.CharField(db_column='TAX_AUTHOR_DEFAULT', max_length=31)),
                ('use_vat_taxation', models.BooleanField(db_column='USE_VAT_TAXATION')),
                ('vat_reg_number', models.CharField(db_column='VAT_REG_NUMBER', max_length=20)),
                ('vat_country', models.CharField(db_column='VAT_COUNTRY', max_length=25)),
            ],
            options={
                'db_table': 'Name_Fin',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NamePicture',
            fields=[
                ('id', models.CharField(db_column='ID', max_length=10)),
                ('picture_num', models.IntegerField(db_column='PICTURE_NUM', primary_key=True, serialize=False)),
                ('purpose', models.CharField(blank=True, db_column='PURPOSE', max_length=20, null=True)),
                ('picture_logo', models.BinaryField(blank=True, db_column='PICTURE_LOGO', null=True)),
                ('description', models.CharField(blank=True, db_column='DESCRIPTION', max_length=255, null=True)),
                ('date_added', models.DateTimeField(blank=True, db_column='DATE_ADDED', null=True)),
                ('last_updated', models.DateTimeField(blank=True, db_column='LAST_UPDATED', null=True)),
                ('updated_by', models.CharField(blank=True, db_column='UPDATED_BY', max_length=60, null=True)),
            ],
            options={
                'db_table': 'Name_Picture',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NameSecurity',
            fields=[
                ('id', models.CharField(db_column='ID', max_length=10, primary_key=True, serialize=False)),
                ('login_disabled', models.BooleanField(db_column='LOGIN_DISABLED')),
                ('web_login', models.CharField(db_column='WEB_LOGIN', max_length=60)),
                ('password', models.CharField(db_column='PASSWORD', max_length=100)),
                ('expiration_date', models.DateTimeField(blank=True, db_column='EXPIRATION_DATE', null=True)),
                ('last_login', models.DateTimeField(blank=True, db_column='LAST_LOGIN', null=True)),
                ('previous_login', models.DateTimeField(blank=True, db_column='PREVIOUS_LOGIN', null=True)),
                ('contactid', models.CharField(db_column='ContactID', max_length=10)),
                ('updated_by', models.CharField(db_column='UPDATED_BY', max_length=60)),
            ],
            options={
                'db_table': 'Name_Security',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OrderLines',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_number', models.DecimalField(db_column='ORDER_NUMBER', decimal_places=2, max_digits=15)),
                ('line_number', models.DecimalField(db_column='LINE_NUMBER', decimal_places=2, max_digits=15)),
                ('product_code', models.CharField(db_column='PRODUCT_CODE', max_length=31)),
                ('location', models.CharField(db_column='LOCATION', max_length=10)),
                ('lot_serial', models.CharField(db_column='LOT_SERIAL', max_length=20)),
                ('description', models.CharField(db_column='DESCRIPTION', max_length=255)),
                ('quantity_ordered', models.DecimalField(db_column='QUANTITY_ORDERED', decimal_places=6, max_digits=15)),
                ('quantity_shipped', models.DecimalField(db_column='QUANTITY_SHIPPED', decimal_places=6, max_digits=15)),
                ('quantity_backordered', models.DecimalField(db_column='QUANTITY_BACKORDERED', decimal_places=6, max_digits=15)),
                ('quantity_reserved', models.DecimalField(db_column='QUANTITY_RESERVED', decimal_places=6, max_digits=15)),
                ('quantity_committed', models.DecimalField(db_column='QUANTITY_COMMITTED', decimal_places=6, max_digits=15)),
                ('number_days', models.IntegerField(db_column='NUMBER_DAYS')),
                ('taxable', models.BooleanField(db_column='TAXABLE')),
                ('taxable_2', models.BooleanField(db_column='TAXABLE_2')),
                ('unit_price', models.DecimalField(db_column='UNIT_PRICE', decimal_places=4, max_digits=19)),
                ('unit_cost', models.DecimalField(db_column='UNIT_COST', decimal_places=4, max_digits=19)),
                ('undiscounted_price', models.DecimalField(db_column='UNDISCOUNTED_PRICE', decimal_places=4, max_digits=19)),
                ('extended_amount', models.DecimalField(db_column='EXTENDED_AMOUNT', decimal_places=4, max_digits=19)),
                ('extended_cost', models.DecimalField(db_column='EXTENDED_COST', decimal_places=4, max_digits=19)),
                ('undiscounted_extended_amount', models.DecimalField(db_column='UNDISCOUNTED_EXTENDED_AMOUNT', decimal_places=4, max_digits=19)),
                ('cancel_code', models.CharField(db_column='CANCEL_CODE', max_length=10)),
                ('cancel_quantity', models.DecimalField(db_column='CANCEL_QUANTITY', decimal_places=6, max_digits=15)),
                ('commission_rate', models.DecimalField(db_column='COMMISSION_RATE', decimal_places=4, max_digits=15)),
                ('commission_amount', models.DecimalField(db_column='COMMISSION_AMOUNT', decimal_places=4, max_digits=19)),
                ('ceu_type', models.CharField(db_column='CEU_TYPE', max_length=15)),
                ('ceu_awarded', models.DecimalField(db_column='CEU_AWARDED', decimal_places=2, max_digits=15)),
                ('pass_fail', models.CharField(db_column='PASS_FAIL', max_length=5)),
                ('date_confirmed', models.DateTimeField(blank=True, db_column='DATE_CONFIRMED', null=True)),
                ('tickets_printed', models.IntegerField(db_column='TICKETS_PRINTED')),
                ('booth_numbers', models.CharField(db_column='BOOTH_NUMBERS', max_length=255)),
                ('note', models.CharField(blank=True, db_column='NOTE', max_length=255, null=True)),
                ('income_account', models.CharField(db_column='INCOME_ACCOUNT', max_length=50)),
                ('unit_weight', models.DecimalField(db_column='UNIT_WEIGHT', decimal_places=2, max_digits=15)),
                ('extended_weight', models.DecimalField(db_column='EXTENDED_WEIGHT', decimal_places=2, max_digits=15)),
                ('pst_taxable', models.BooleanField(db_column='PST_TAXABLE')),
                ('is_gst_taxable', models.BooleanField(db_column='IS_GST_TAXABLE')),
                ('added_to_wait_list', models.DateTimeField(blank=True, db_column='ADDED_TO_WAIT_LIST', null=True)),
                ('bin', models.CharField(db_column='BIN', max_length=10)),
                ('tax_authority', models.CharField(db_column='TAX_AUTHORITY', max_length=15)),
                ('tax_rate', models.DecimalField(db_column='TAX_RATE', decimal_places=4, max_digits=15)),
                ('tax_1', models.DecimalField(db_column='TAX_1', decimal_places=4, max_digits=15)),
                ('kit_item_type', models.SmallIntegerField(db_column='KIT_ITEM_TYPE')),
                ('discount', models.DecimalField(db_column='DISCOUNT', decimal_places=2, max_digits=15)),
                ('uf_1', models.CharField(db_column='UF_1', max_length=30)),
                ('uf_2', models.CharField(db_column='UF_2', max_length=30)),
                ('uf_3', models.CharField(db_column='UF_3', max_length=30)),
                ('uf_4', models.CharField(db_column='UF_4', max_length=30)),
                ('extended_square_feet', models.DecimalField(db_column='EXTENDED_SQUARE_FEET', decimal_places=2, max_digits=15)),
                ('square_feet', models.DecimalField(db_column='SQUARE_FEET', decimal_places=2, max_digits=15)),
                ('meet_appeal', models.CharField(db_column='MEET_APPEAL', max_length=40)),
                ('meet_campaign', models.CharField(db_column='MEET_CAMPAIGN', max_length=10)),
                ('fair_market_value', models.DecimalField(db_column='FAIR_MARKET_VALUE', decimal_places=2, max_digits=15)),
                ('org_code', models.CharField(db_column='ORG_CODE', max_length=5)),
                ('is_fr_item', models.BooleanField(db_column='IS_FR_ITEM')),
                ('manual_price', models.DecimalField(db_column='MANUAL_PRICE', decimal_places=2, max_digits=15)),
                ('is_manual_price', models.BooleanField(db_column='IS_MANUAL_PRICE')),
                ('unit_tax_amount', models.DecimalField(db_column='UNIT_TAX_AMOUNT', decimal_places=4, max_digits=15)),
                ('price_from_components', models.BooleanField(db_column='PRICE_FROM_COMPONENTS')),
                ('quantity_per_kit', models.DecimalField(db_column='QUANTITY_PER_KIT', decimal_places=6, max_digits=15)),
            ],
            options={
                'db_table': 'Order_Lines',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OrgDemographics',
            fields=[
                ('id', models.CharField(db_column='ID', max_length=10, primary_key=True, serialize=False)),
                ('pas_code', models.CharField(blank=True, db_column='PAS_CODE', max_length=15)),
                ('org_type', models.CharField(blank=True, db_column='ORG_TYPE', max_length=60, null=True)),
                ('population', models.CharField(blank=True, db_column='POPULATION', max_length=10, null=True)),
                ('annual_budget', models.CharField(blank=True, db_column='ANNUAL_BUDGET', max_length=10, null=True)),
                ('staff_size', models.CharField(blank=True, db_column='STAFF_SIZE', max_length=10, null=True)),
                ('parent_id', models.CharField(blank=True, db_column='PARENT_ID', max_length=9, null=True)),
                ('top_city', models.BooleanField(db_column='TOP_CITY', default=False)),
                ('top_county', models.BooleanField(db_column='TOP_COUNTY', default=False)),
                ('planning_function', models.BooleanField(db_column='PLANNING_FUNCTION', default=False)),
                ('school_program_type', models.CharField(blank=True, db_column='SCHOOL_PROGRAM_TYPE', max_length=10, null=True)),
            ],
            options={
                'db_table': 'ORG_Demographics',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Relationship',
            fields=[
                ('id', models.CharField(db_column='ID', max_length=10)),
                ('relation_type', models.CharField(db_column='RELATION_TYPE', max_length=10)),
                ('target_id', models.CharField(db_column='TARGET_ID', max_length=10)),
                ('target_name', models.CharField(db_column='TARGET_NAME', max_length=60)),
                ('target_relation_type', models.CharField(db_column='TARGET_RELATION_TYPE', max_length=10)),
                ('title', models.CharField(db_column='TITLE', max_length=80)),
                ('functional_title', models.CharField(db_column='FUNCTIONAL_TITLE', max_length=50)),
                ('status', models.CharField(db_column='STATUS', max_length=5)),
                ('effective_date', models.DateTimeField(blank=True, db_column='EFFECTIVE_DATE', null=True)),
                ('thru_date', models.DateTimeField(blank=True, db_column='THRU_DATE', null=True)),
                ('note', models.TextField(blank=True, db_column='NOTE', null=True)),
                ('last_string', models.CharField(db_column='LAST_STRING', max_length=255)),
                ('date_added', models.DateTimeField(blank=True, db_column='DATE_ADDED', null=True)),
                ('last_updated', models.DateTimeField(blank=True, db_column='LAST_UPDATED', null=True)),
                ('updated_by', models.CharField(db_column='UPDATED_BY', max_length=60)),
                ('seqn', models.IntegerField(db_column='SEQN', primary_key=True, serialize=False)),
                ('group_code', models.CharField(db_column='GROUP_CODE', max_length=30)),
            ],
            options={
                'db_table': 'Relationship',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ZipCode',
            fields=[
                ('zip', models.CharField(db_column='ZIP', max_length=5, primary_key=True, serialize=False)),
                ('city', models.CharField(db_column='CITY', max_length=40)),
                ('state', models.CharField(db_column='STATE', max_length=2)),
                ('zip_type', models.CharField(db_column='ZIP_TYPE', max_length=1)),
                ('county_fips', models.CharField(db_column='COUNTY_FIPS', max_length=5)),
                ('county', models.CharField(db_column='COUNTY', max_length=30)),
                ('area_code', models.CharField(db_column='AREA_CODE', max_length=3)),
                ('chapter', models.CharField(db_column='CHAPTER', max_length=15)),
            ],
            options={
                'db_table': 'Zip_Code',
                'managed': False,
            },
        ),
    ]
