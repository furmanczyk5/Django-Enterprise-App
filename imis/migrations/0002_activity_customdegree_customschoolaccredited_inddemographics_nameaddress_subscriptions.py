# -*- coding: utf-8 -*-
# Generated by Django 1.10.4 on 2017-06-12 19:33
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('imis', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('seqn', models.IntegerField(db_column='SEQN', primary_key=True, serialize=False)),
                ('id', models.CharField(db_column='ID', max_length=10)),
                ('activity_type', models.CharField(db_column='ACTIVITY_TYPE', max_length=10)),
                ('transaction_date', models.DateTimeField(blank=True, db_column='TRANSACTION_DATE', null=True)),
                ('effective_date', models.DateTimeField(blank=True, db_column='EFFECTIVE_DATE', null=True)),
                ('product_code', models.CharField(db_column='PRODUCT_CODE', max_length=31)),
                ('other_code', models.CharField(db_column='OTHER_CODE', max_length=30)),
                ('description', models.CharField(db_column='DESCRIPTION', max_length=255)),
                ('source_system', models.CharField(db_column='SOURCE_SYSTEM', max_length=10)),
                ('source_code', models.CharField(blank=True, db_column='SOURCE_CODE', max_length=40, null=True)),
                ('quantity', models.DecimalField(db_column='QUANTITY', decimal_places=2, max_digits=15)),
                ('amount', models.DecimalField(db_column='AMOUNT', decimal_places=4, max_digits=19)),
                ('category', models.CharField(db_column='CATEGORY', max_length=15)),
                ('units', models.DecimalField(blank=True, db_column='UNITS', decimal_places=2, max_digits=15, null=True)),
                ('thru_date', models.DateTimeField(blank=True, db_column='THRU_DATE', null=True)),
                ('member_type', models.CharField(db_column='MEMBER_TYPE', max_length=5)),
                ('action_codes', models.CharField(db_column='ACTION_CODES', max_length=255)),
                ('pay_method', models.CharField(db_column='PAY_METHOD', max_length=50)),
                ('tickler_date', models.DateTimeField(blank=True, db_column='TICKLER_DATE', null=True)),
                ('note', models.TextField(blank=True, db_column='NOTE', null=True)),
                ('note_2', models.TextField(blank=True, db_column='NOTE_2', null=True)),
                ('batch_num', models.CharField(db_column='BATCH_NUM', max_length=15)),
                ('co_id', models.CharField(db_column='CO_ID', max_length=10)),
                ('object', models.BinaryField(blank=True, db_column='OBJECT', null=True)),
                ('intent_to_edit', models.CharField(db_column='INTENT_TO_EDIT', max_length=80)),
                ('uf_1', models.CharField(db_column='UF_1', max_length=255)),
                ('uf_2', models.CharField(db_column='UF_2', max_length=255)),
                ('uf_3', models.CharField(db_column='UF_3', max_length=255)),
                ('uf_4', models.DecimalField(db_column='UF_4', decimal_places=4, max_digits=15)),
                ('uf_5', models.DecimalField(db_column='UF_5', decimal_places=4, max_digits=15)),
                ('uf_6', models.DateTimeField(blank=True, db_column='UF_6', null=True)),
                ('uf_7', models.DateTimeField(blank=True, db_column='UF_7', null=True)),
                ('originating_trans_num', models.IntegerField(db_column='ORIGINATING_TRANS_NUM')),
                ('org_code', models.CharField(db_column='ORG_CODE', max_length=5)),
                ('campaign_code', models.CharField(db_column='CAMPAIGN_CODE', max_length=10)),
                ('other_id', models.CharField(db_column='OTHER_ID', max_length=10)),
                ('solicitor_id', models.CharField(db_column='SOLICITOR_ID', max_length=10)),
                ('taxable_value', models.DecimalField(db_column='TAXABLE_VALUE', decimal_places=4, max_digits=19)),
                ('attach_seqn', models.IntegerField(db_column='ATTACH_SEQN')),
                ('attach_total', models.IntegerField(db_column='ATTACH_TOTAL')),
                ('recurring_request', models.BooleanField(db_column='RECURRING_REQUEST')),
                ('status_code', models.CharField(blank=True, db_column='STATUS_CODE', max_length=1, null=True)),
                ('next_install_date', models.DateTimeField(blank=True, db_column='NEXT_INSTALL_DATE', null=True)),
                ('grace_period', models.IntegerField(blank=True, db_column='GRACE_PERIOD', null=True)),
                ('mem_trib_code', models.CharField(db_column='MEM_TRIB_CODE', max_length=10)),
            ],
            options={
                'managed': False,
                'db_table': 'Activity',
            },
        ),
        migrations.CreateModel(
            name='CustomDegree',
            fields=[
                ('id', models.CharField(db_column='ID', max_length=10)),
                ('seqn', models.IntegerField(db_column='SEQN', primary_key=True, serialize=False)),
                ('school_id', models.CharField(db_column='SCHOOL_ID', max_length=10)),
                ('school_other', models.CharField(db_column='SCHOOL_OTHER', max_length=255)),
                ('degree_level', models.CharField(db_column='DEGREE_LEVEL', max_length=10)),
                ('degree_date', models.DateTimeField(blank=True, db_column='DEGREE_DATE', null=True)),
                ('degree_planning', models.BooleanField(db_column='DEGREE_PLANNING')),
                ('major', models.CharField(db_column='MAJOR', max_length=10)),
                ('accredited_program', models.CharField(db_column='ACCREDITED_PROGRAM', max_length=255)),
                ('degree_complete', models.BooleanField(db_column='DEGREE_COMPLETE')),
                ('school_student_id', models.CharField(db_column='SCHOOL_STUDENT_ID', max_length=255)),
                ('all_schools', models.CharField(db_column='ALL_SCHOOLS', max_length=255)),
                ('accred_schools', models.CharField(db_column='ACCRED_SCHOOLS', max_length=255)),
                ('degree_program', models.CharField(db_column='DEGREE_PROGRAM', max_length=255)),
            ],
            options={
                'managed': False,
                'db_table': 'Custom_Degree',
            },
        ),
        migrations.CreateModel(
            name='CustomSchoolaccredited',
            fields=[
                ('id', models.CharField(db_column='ID', max_length=10)),
                ('seqn', models.IntegerField(db_column='SEQN', primary_key=True, serialize=False)),
                ('start_date', models.DateTimeField(blank=True, db_column='START_DATE', null=True)),
                ('end_date', models.DateTimeField(blank=True, db_column='END_DATE', null=True)),
                ('degree_level', models.CharField(db_column='DEGREE_LEVEL', max_length=60)),
                ('school_program_type', models.CharField(db_column='SCHOOL_PROGRAM_TYPE', max_length=20)),
                ('degree_program', models.CharField(db_column='DEGREE_PROGRAM', max_length=255)),
            ],
            options={
                'managed': False,
                'db_table': 'Custom_SchoolAccredited',
            },
        ),
        migrations.CreateModel(
            name='IndDemographics',
            fields=[
                ('id', models.CharField(db_column='ID', max_length=10, primary_key=True, serialize=False)),
                ('apa_life_date', models.DateTimeField(blank=True, db_column='APA_LIFE_DATE', null=True)),
                ('aicp_life_member', models.BooleanField(db_column='AICP_LIFE_MEMBER')),
                ('aicp_life_date', models.DateTimeField(blank=True, db_column='AICP_LIFE_DATE', null=True)),
                ('faculty_position', models.CharField(db_column='FACULTY_POSITION', max_length=5)),
                ('admin_position', models.CharField(db_column='ADMIN_POSITION', max_length=5)),
                ('salary_range', models.CharField(db_column='SALARY_RANGE', max_length=5)),
                ('promotion_codes', models.CharField(db_column='PROMOTION_CODES', max_length=60)),
                ('date_of_birth', models.DateTimeField(blank=True, db_column='DATE_OF_BIRTH', null=True)),
                ('sub_specialty', models.CharField(db_column='SUB_SPECIALTY', max_length=6)),
                ('usa_citizen', models.BooleanField(db_column='USA_CITIZEN')),
                ('aicp_start', models.DateTimeField(blank=True, db_column='AICP_START', null=True)),
                ('aicp_cert_no', models.CharField(db_column='AICP_CERT_NO', max_length=10)),
                ('perpetuity', models.BooleanField(db_column='PERPETUITY')),
                ('aicp_promo_1', models.CharField(db_column='AICP_PROMO_1', max_length=20)),
                ('hint_password', models.CharField(db_column='HINT_PASSWORD', max_length=4)),
                ('hint_answer', models.CharField(db_column='HINT_ANSWER', max_length=60)),
                ('country_codes', models.CharField(db_column='COUNTRY_CODES', max_length=5)),
                ('specialty', models.CharField(db_column='SPECIALTY', max_length=50)),
                ('apa_life_member', models.BooleanField(db_column='APA_LIFE_MEMBER')),
                ('conf_code', models.CharField(db_column='CONF_CODE', max_length=4)),
                ('mentor_signup', models.BooleanField(db_column='MENTOR_SIGNUP')),
                ('male', models.BooleanField(db_column='MALE')),
                ('female', models.BooleanField(db_column='FEMALE')),
                ('department', models.CharField(db_column='DEPARTMENT', max_length=50)),
                ('conv_np', models.BooleanField(db_column='CONV_NP')),
                ('invoice_num', models.CharField(db_column='INVOICE_NUM', max_length=30)),
                ('prev_mt', models.CharField(db_column='PREV_MT', max_length=10)),
                ('conv_freestu', models.BooleanField(db_column='CONV_FREESTU')),
                ('conv_stu', models.BooleanField(db_column='CONV_STU')),
                ('chapt_only', models.BooleanField(db_column='CHAPT_ONLY')),
                ('asla', models.BooleanField(db_column='ASLA')),
                ('salary_verifydate', models.DateTimeField(blank=True, db_column='SALARY_VERIFYDATE', null=True)),
                ('functional_title_verifydate', models.DateTimeField(blank=True, db_column='FUNCTIONAL_TITLE_VERIFYDATE', null=True)),
                ('previous_aicp_cert_no', models.CharField(db_column='PREVIOUS_AICP_CERT_NO', max_length=10)),
                ('previous_aicp_start', models.DateTimeField(blank=True, db_column='PREVIOUS_AICP_START', null=True)),
                ('email_secondary', models.CharField(db_column='EMAIL_SECONDARY', max_length=100)),
                ('ecp_start_date', models.DateTimeField(blank=True, db_column='ECP_START_DATE', null=True)),
                ('conv_ecp5', models.BooleanField(db_column='CONV_ECP5')),
                ('exclude_from_drop', models.BooleanField(db_column='EXCLUDE_FROM_DROP')),
                ('student_start_date', models.DateTimeField(blank=True, db_column='STUDENT_START_DATE', null=True)),
                ('school_complete', models.BooleanField(db_column='SCHOOL_COMPLETE')),
                ('student_program_year', models.FloatField(db_column='STUDENT_PROGRAM_YEAR')),
            ],
            options={
                'managed': False,
                'db_table': 'Ind_Demographics',
            },
        ),
        migrations.CreateModel(
            name='NameAddress',
            fields=[
                ('id', models.CharField(db_column='ID', max_length=10)),
                ('address_num', models.IntegerField(db_column='ADDRESS_NUM', primary_key=True, serialize=False)),
                ('purpose', models.CharField(db_column='PURPOSE', max_length=20)),
                ('company', models.CharField(db_column='COMPANY', max_length=80)),
                ('address_1', models.CharField(db_column='ADDRESS_1', max_length=40)),
                ('address_2', models.CharField(db_column='ADDRESS_2', max_length=40)),
                ('city', models.CharField(db_column='CITY', max_length=40)),
                ('state_province', models.CharField(db_column='STATE_PROVINCE', max_length=15)),
                ('zip', models.CharField(db_column='ZIP', max_length=10)),
                ('country', models.CharField(db_column='COUNTRY', max_length=25)),
                ('crrt', models.CharField(db_column='CRRT', max_length=40)),
                ('dpb', models.CharField(db_column='DPB', max_length=8)),
                ('bar_code', models.CharField(db_column='BAR_CODE', max_length=14)),
                ('country_code', models.CharField(db_column='COUNTRY_CODE', max_length=10)),
                ('address_format', models.SmallIntegerField(db_column='ADDRESS_FORMAT')),
                ('full_address', models.CharField(db_column='FULL_ADDRESS', max_length=255)),
                ('county', models.CharField(db_column='COUNTY', max_length=30)),
                ('us_congress', models.CharField(db_column='US_CONGRESS', max_length=5)),
                ('state_senate', models.CharField(db_column='STATE_SENATE', max_length=5)),
                ('state_house', models.CharField(db_column='STATE_HOUSE', max_length=5)),
                ('mail_code', models.CharField(db_column='MAIL_CODE', max_length=5)),
                ('phone', models.CharField(db_column='PHONE', max_length=25)),
                ('fax', models.CharField(db_column='FAX', max_length=25)),
                ('toll_free', models.CharField(db_column='TOLL_FREE', max_length=25)),
                ('company_sort', models.CharField(db_column='COMPANY_SORT', max_length=30)),
                ('note', models.TextField(blank=True, db_column='NOTE', null=True)),
                ('status', models.CharField(db_column='STATUS', max_length=5)),
                ('last_updated', models.DateTimeField(blank=True, db_column='LAST_UPDATED', null=True)),
                ('list_string', models.CharField(db_column='LIST_STRING', max_length=255)),
                ('preferred_mail', models.BooleanField(db_column='PREFERRED_MAIL')),
                ('preferred_bill', models.BooleanField(db_column='PREFERRED_BILL')),
                ('last_verified', models.DateTimeField(blank=True, db_column='LAST_VERIFIED', null=True)),
                ('email', models.CharField(db_column='EMAIL', max_length=100)),
                ('bad_address', models.CharField(db_column='BAD_ADDRESS', max_length=10)),
                ('no_autoverify', models.BooleanField(db_column='NO_AUTOVERIFY')),
                ('last_qas_batch', models.DateTimeField(blank=True, db_column='LAST_QAS_BATCH', null=True)),
                ('address_3', models.CharField(db_column='ADDRESS_3', max_length=40)),
                ('preferred_ship', models.BooleanField(db_column='PREFERRED_SHIP')),
                ('informal', models.CharField(db_column='INFORMAL', max_length=20)),
                ('title', models.CharField(db_column='TITLE', max_length=80)),
            ],
            options={
                'managed': False,
                'db_table': 'Name_Address',
            },
        ),
        migrations.CreateModel(
            name='Subscriptions',
            fields=[
                ('id', models.CharField(db_column='ID', max_length=10, primary_key=True, serialize=False)),
                ('product_code', models.CharField(db_column='PRODUCT_CODE', max_length=31)),
                ('bt_id', models.CharField(db_column='BT_ID', max_length=10)),
                ('prod_type', models.CharField(db_column='PROD_TYPE', max_length=10)),
                ('status', models.CharField(db_column='STATUS', max_length=5)),
                ('begin_date', models.DateTimeField(blank=True, db_column='BEGIN_DATE', null=True)),
                ('paid_thru', models.DateTimeField(blank=True, db_column='PAID_THRU', null=True)),
                ('copies', models.IntegerField(db_column='COPIES')),
                ('source_code', models.CharField(db_column='SOURCE_CODE', max_length=40)),
                ('first_subscribed', models.DateTimeField(blank=True, db_column='FIRST_SUBSCRIBED', null=True)),
                ('continuous_since', models.DateTimeField(blank=True, db_column='CONTINUOUS_SINCE', null=True)),
                ('prior_years', models.IntegerField(db_column='PRIOR_YEARS')),
                ('future_copies', models.IntegerField(db_column='FUTURE_COPIES')),
                ('future_copies_date', models.DateTimeField(blank=True, db_column='FUTURE_COPIES_DATE', null=True)),
                ('pref_mail', models.IntegerField(db_column='PREF_MAIL')),
                ('pref_bill', models.IntegerField(db_column='PREF_BILL')),
                ('renew_months', models.SmallIntegerField(db_column='RENEW_MONTHS')),
                ('mail_code', models.CharField(db_column='MAIL_CODE', max_length=5)),
                ('previous_balance', models.DecimalField(db_column='PREVIOUS_BALANCE', decimal_places=4, max_digits=19)),
                ('bill_date', models.DateTimeField(blank=True, db_column='BILL_DATE', null=True)),
                ('reminder_date', models.DateTimeField(blank=True, db_column='REMINDER_DATE', null=True)),
                ('reminder_count', models.SmallIntegerField(db_column='REMINDER_COUNT')),
                ('bill_begin', models.DateTimeField(blank=True, db_column='BILL_BEGIN', null=True)),
                ('bill_thru', models.DateTimeField(blank=True, db_column='BILL_THRU', null=True)),
                ('bill_amount', models.DecimalField(db_column='BILL_AMOUNT', decimal_places=4, max_digits=19)),
                ('bill_copies', models.IntegerField(db_column='BILL_COPIES')),
                ('payment_amount', models.DecimalField(db_column='PAYMENT_AMOUNT', decimal_places=4, max_digits=19)),
                ('payment_date', models.DateTimeField(blank=True, db_column='PAYMENT_DATE', null=True)),
                ('paid_begin', models.DateTimeField(blank=True, db_column='PAID_BEGIN', null=True)),
                ('last_paid_thru', models.DateTimeField(blank=True, db_column='LAST_PAID_THRU', null=True)),
                ('copies_paid', models.IntegerField(db_column='COPIES_PAID')),
                ('adjustment_amount', models.DecimalField(db_column='ADJUSTMENT_AMOUNT', decimal_places=4, max_digits=19)),
                ('ltd_payments', models.DecimalField(db_column='LTD_PAYMENTS', decimal_places=4, max_digits=19)),
                ('issues_printed', models.CharField(db_column='ISSUES_PRINTED', max_length=255)),
                ('balance', models.DecimalField(db_column='BALANCE', decimal_places=4, max_digits=19)),
                ('cancel_reason', models.CharField(db_column='CANCEL_REASON', max_length=10)),
                ('years_active_string', models.CharField(db_column='YEARS_ACTIVE_STRING', max_length=100)),
                ('last_issue', models.CharField(db_column='LAST_ISSUE', max_length=15)),
                ('last_issue_date', models.DateTimeField(blank=True, db_column='LAST_ISSUE_DATE', null=True)),
                ('date_added', models.DateTimeField(blank=True, db_column='DATE_ADDED', null=True)),
                ('last_updated', models.DateTimeField(blank=True, db_column='LAST_UPDATED', null=True)),
                ('updated_by', models.CharField(db_column='UPDATED_BY', max_length=60)),
                ('intent_to_edit', models.CharField(db_column='INTENT_TO_EDIT', max_length=80)),
                ('flag', models.CharField(db_column='FLAG', max_length=5)),
                ('bill_type', models.CharField(db_column='BILL_TYPE', max_length=1)),
                ('complimentary', models.BooleanField(db_column='COMPLIMENTARY')),
                ('future_credits', models.DecimalField(db_column='FUTURE_CREDITS', decimal_places=4, max_digits=19)),
                ('invoice_reference_num', models.IntegerField(db_column='INVOICE_REFERENCE_NUM')),
                ('invoice_line_num', models.IntegerField(db_column='INVOICE_LINE_NUM')),
                ('campaign_code', models.CharField(db_column='CAMPAIGN_CODE', max_length=10)),
                ('appeal_code', models.CharField(db_column='APPEAL_CODE', max_length=40)),
                ('org_code', models.CharField(db_column='ORG_CODE', max_length=5)),
                ('is_fr_item', models.BooleanField(db_column='IS_FR_ITEM')),
                ('fair_market_value', models.DecimalField(db_column='FAIR_MARKET_VALUE', decimal_places=2, max_digits=15)),
                ('is_group_admin', models.BooleanField(db_column='IS_GROUP_ADMIN')),
            ],
            options={
                'managed': False,
                'db_table': 'Subscriptions',
            },
        ),
    ]
