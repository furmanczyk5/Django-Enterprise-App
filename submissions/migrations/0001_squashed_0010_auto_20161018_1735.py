# -*- coding: utf-8 -*-
# Generated by Django 1.10.4 on 2016-12-19 21:05
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    # replaces = [('submissions', '0001_squashed_0028_auto_20160401_1553'), ('submissions', '0002_auto_20160428_2211'), ('submissions', '0003_period_category'), ('submissions', '0004_auto_20160505_2219'), ('submissions', '0005_auto_20160601_2336'), ('submissions', '0006_auto_20160609_1615'), ('submissions', '0007_auto_20160609_1808'), ('submissions', '0008_review_custom_text_2'), ('submissions', '0009_auto_20160802_1707'), ('submissions', '0010_auto_20161018_1735')]

    initial = True

    dependencies = [
        # ('uploads', '0001_squashed_0003_auto_20161018_1735'),
('uploads', '0001_squashed_0012_auto_20160212_2132'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        # ('myapa', '0001_squashed_0007_auto_20161018_1735'),
('myapa', '0001_squashed_0052_auto_20160331_1650'),
        # ('content', '0001_squashed_0012_auto_20161018_1735'),
        ('content', '0001_squashed_0064_auto_20160328_1819'),
    ]

    operations = [
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(blank=True, null=True)),
                ('boolean', models.BooleanField(default=False)),
                ('content', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submission_answer', to='content.Content')),
                ('tag', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name="submission_answers", to='content.Tag')),
                ('publish_status', models.CharField(choices=[('DRAFT', 'Draft'), ('PUBLISHED', 'Published'), ('SUBMISSION', 'Submission'), ('EARLY_RESUBMISSION', 'Early Resubmission')], default='DRAFT', max_length=50)),
                ('publish_time', models.DateTimeField(blank=True, null=True, verbose_name='publish time')),
                ('publish_uuid', models.CharField(blank=True, default=uuid.uuid4, max_length=36, null=True)),
                ('published_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='submissions_answer_published_by', to=settings.AUTH_USER_MODEL)),
                ('published_time', models.DateTimeField(blank=True, editable=False, null=True)),
            ],
            options={
                'permissions': (('can_publish', 'Can publish'),)
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, max_length=200, null=True)),
                ('title', models.CharField(blank=True, max_length=200, null=True)),
                ('status', models.CharField(choices=[('A', 'Active'), ('P', 'Pending'), ('I', 'Inactive'), ('H', 'Hidden'), ('S', 'Staff-Use Only'), ('X', 'Marked for Deletion'), ('N', 'Not Complete'), ('C', 'Complete'), ('CA', 'Cancelled')], default='A', max_length=5, verbose_name='visibility status')),
                ('description', models.TextField(blank=True, null=True)),
                ('slug', models.SlugField(blank=True, help_text='An identifier for the ending of the url - will be auto-generated based on the title for web pages.', null=True)),
                ('created_time', models.DateTimeField(editable=False)),
                ('updated_time', models.DateTimeField(editable=False)),
                ('content_type', models.CharField(choices=[('PAGE', 'Web page'), ('EVENT', 'Events & training'), ('RFP', 'RFP/RFQ'), ('KNOWLEDGEBASE', 'Planning knowledgebase entry'), ('KNOWLEDGEBASE_COLLECTION', 'Planning knowledgebase collection'), ('AWARD', 'Award nomination'), ('RESEARCH_INQUIRY', 'Research inquiry'), ('IMAGE', 'Image library image'), ('MEDIA', 'Resource library media'), ('PRODUCT', 'Other products'), ('PUBLICATION', 'Publication (Article, Book, E-Book)'), ('BLOG', 'Blog post'), ('EXAM', 'Exam application submission'), ('JOB', 'Job ad')], default='PAGE', max_length=50)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submissions_category_created_by', to=settings.AUTH_USER_MODEL)),
                ('deadline_time', models.DateTimeField(blank=True, null=True, verbose_name='deadline')),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submissions_category_updated_by', to=settings.AUTH_USER_MODEL)),
                ('upload_types', models.ManyToManyField(blank=True, related_name='submission_categories', to='uploads.UploadType')),
                ('reviewer_tag_types', models.ManyToManyField(blank=True, to='content.TagType')),
                ('product_master', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='submission_categories', to='content.MasterContent')),
                ('sort_number', models.IntegerField(blank=True, null=True),
),
            ],
            options={
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='Period',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, max_length=200, null=True)),
                ('title', models.CharField(blank=True, max_length=200, null=True)),
                ('status', models.CharField(choices=[('A', 'Active'), ('P', 'Pending'), ('I', 'Inactive'), ('H', 'Hidden'), ('S', 'Staff-Use Only'), ('X', 'Marked for Deletion'), ('N', 'Not Complete'), ('C', 'Complete'), ('CA', 'Cancelled')], default='A', max_length=5, verbose_name='visibility status')),
                ('description', models.TextField(blank=True, null=True)),
                ('slug', models.SlugField(blank=True, help_text='An identifier for the ending of the url - will be auto-generated based on the title for web pages.', null=True)),
                ('created_time', models.DateTimeField(editable=False)),
                ('updated_time', models.DateTimeField(editable=False)),
                ('begin_time', models.DateTimeField(blank=True, null=True, verbose_name='begin time')),
                ('end_time', models.DateTimeField(blank=True, null=True, verbose_name='end time')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submissions_period_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submissions_period_updated_by', to=settings.AUTH_USER_MODEL)),
                ('content_type', models.CharField(choices=[('PAGE', 'Web page'), ('EVENT', 'Events & training'), ('RFP', 'RFP/RFQ'), ('KNOWLEDGEBASE', 'Planning knowledgebase entry'), ('KNOWLEDGEBASE_COLLECTION', 'Planning knowledgebase collection'), ('AWARD', 'Award nomination'), ('RESEARCH_INQUIRY', 'Research inquiry'), ('IMAGE', 'Image library image'), ('MEDIA', 'Resource library media'), ('PRODUCT', 'Other products'), ('PUBLICATION', 'Publication (Article, Book, E-Book)'), ('BLOG', 'Blog post'), ('EXAM', 'Exam application submission'), ('JOB', 'Job ad')], default='AWARDS', max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, max_length=200, null=True)),
                ('title', models.CharField(blank=True, max_length=200, null=True)),
                ('status', models.CharField(choices=[('A', 'Active'), ('P', 'Pending'), ('I', 'Inactive'), ('H', 'Hidden'), ('S', 'Staff-Use Only'), ('X', 'Marked for Deletion'), ('N', 'Not Complete'), ('C', 'Complete'), ('CA', 'Cancelled')], default='A', max_length=5, verbose_name='visibility status')),
                ('description', models.TextField(blank=True, null=True)),
                ('slug', models.SlugField(blank=True, help_text='An identifier for the ending of the url - will be auto-generated based on the title for web pages.', null=True)),
                ('created_time', models.DateTimeField(editable=False)),
                ('updated_time', models.DateTimeField(editable=False)),
                ('question_type', models.CharField(choices=[('LONG_TEXT', 'Long Text'), ('SHORT_TEXT', 'Short Text'), ('CHECKBOX', 'Checkbox'), ('CHECKBOX_FINAL', 'Final Step Checkbox'), ('TAG', 'Tag options')], default='SHORT_TEXT', max_length=50)),
                ('help_text', models.TextField(blank=True, null=True)),
                ('required', models.BooleanField(default=False)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submissions_question_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submissions_question_updated_by', to=settings.AUTH_USER_MODEL)),
                ('tag_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='content.TagType')),
                ('words_max', models.IntegerField(blank=True, null=True)),
                ('words_min', models.IntegerField(blank=True, null=True)),
                ('sort_number', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.AddField(
            model_name='answer',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='submissions.Question'),
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating_1', models.IntegerField(blank=True, null=True)),
                ('rating_2', models.IntegerField(blank=True, null=True)),
                ('rating_3', models.IntegerField(blank=True, null=True)),
                ('rating_4', models.IntegerField(blank=True, null=True)),
                ('comments', models.TextField(blank=True, null=True)),
                ('deadline_time', models.DateTimeField(blank=True, null=True)),
                ('review_time', models.DateTimeField(blank=True, editable=False, null=True)),
                ('review_type', models.CharField(choices=[('AWARDS_JURY', 'Awards Jury'), ('RESEARCH_INQUIRY', 'PAS Research Inquiry'), ('EXAM_REVIEW', 'Exam Application Reviewer'), ('CONFERENCE_PROPOSAL_REVIEW', 'Conference Proposal Review')], default='AWARDS_JURY', max_length=50)),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='myapa.Contact')),
                ('content', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='review_assignments', to='content.Content')),
                ('review_round', models.IntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6)], default=1)),
                ('recused', models.BooleanField(default=False)),
                ('tags', models.ManyToManyField(blank=True, to='content.Tag')),
                ('assigned_time', models.DateTimeField(blank=True, editable=False, null=True)),
                ('custom_boolean_1', models.BooleanField(default=False)),
                ('custom_text_1', models.TextField(blank=True, null=True)),
                ('custom_text_2', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ReviewRole',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, max_length=200, null=True)),
                ('title', models.CharField(blank=True, max_length=200, null=True)),
                ('status', models.CharField(choices=[('A', 'Active'), ('P', 'Pending'), ('I', 'Inactive'), ('H', 'Hidden'), ('S', 'Staff-Use Only'), ('X', 'Marked for Deletion'), ('N', 'Not Complete'), ('C', 'Complete'), ('CA', 'Cancelled')], default='A', max_length=5, verbose_name='visibility status')),
                ('description', models.TextField(blank=True, null=True)),
                ('slug', models.SlugField(blank=True, help_text='An identifier for the ending of the url - will be auto-generated based on the title for web pages.', null=True)),
                ('created_time', models.DateTimeField(editable=False)),
                ('updated_time', models.DateTimeField(editable=False)),
                ('review_type', models.CharField(choices=[('AWARDS_JURY', 'Awards Jury'), ('RESEARCH_INQUIRY', 'PAS Research Inquiry'), ('EXAM_REVIEW', 'Exam Application Reviewer'), ('CONFERENCE_PROPOSAL_REVIEW', 'Conference Proposal Review')], default='AWARDS_JURY', max_length=50)),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='review_roles', to='myapa.Contact')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submissions_reviewrole_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submissions_reviewrole_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='review',
            name='role',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='submissions.ReviewRole'),
        ),
        migrations.CreateModel(
            name='AnswerReview',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField(blank=True, null=True)),
                ('comments', models.TextField(blank=True, null=True)),
                ('answered_successfully', models.NullBooleanField()),
                ('answer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answer_reviews', to='submissions.Answer')),
                ('review', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answer_reviews', to='submissions.Review')),
            ],
        ),
        migrations.AddField(
            model_name='category',
            name='questions',
            field=models.ManyToManyField(blank=True, related_name='categories', to='submissions.Question'),
        ),
        # migrations.AddField(
        #     model_name='answer',
        #     name='publish_status',
        #     field=models.CharField(choices=[('DRAFT', 'Draft'), ('PUBLISHED', 'Published'), ('SUBMISSION', 'Submission'), ('EARLY_RESUBMISSION', 'Early Resubmission')], default='DRAFT', max_length=50),
        # ),
        # migrations.AddField(
        #     model_name='answer',
        #     name='publish_time',
        #     field=models.DateTimeField(blank=True, null=True, verbose_name='publish time'),
        # ),
        # migrations.AddField(
        #     model_name='answer',
        #     name='publish_uuid',
        #     field=models.CharField(blank=True, default=uuid.uuid4, max_length=36, null=True),
        # ),
        # migrations.AddField(
        #     model_name='answer',
        #     name='published_by',
        #     field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='submissions_answer_published_by', to=settings.AUTH_USER_MODEL),
        # ),
        # migrations.AddField(
        #     model_name='answer',
        #     name='published_time',
        #     field=models.DateTimeField(blank=True, editable=False, null=True),
        # ),
        migrations.AddField(
            model_name='period',
            name='category',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='periods', to='submissions.Category'),
            preserve_default=False,
        ),
        # migrations.AddField(
        #     model_name='review',
        #     name='assigned_time',
        #     field=models.DateTimeField(blank=True, editable=False, null=True),
        # ),
        # migrations.AlterField(
        #     model_name='review',
        #     name='review_type',
        #     field=models.CharField(choices=[('AWARDS_JURY', 'Awards Jury'), ('RESEARCH_INQUIRY', 'PAS Research Inquiry'), ('EXAM_REVIEW', 'Exam Application Reviewer'), ('CONFERENCE_PROPOSAL_REVIEW', 'Conference Proposal Review')], default='AWARDS_JURY', max_length=50),
        # ),
        # migrations.AlterModelOptions(
        #     name='answer',
        #     options={'permissions': (('can_publish', 'Can publish'),)},
        # ),
        # migrations.AlterField(
        #     model_name='review',
        #     name='deadline_time',
        #     field=models.DateTimeField(blank=True, null=True),
        # ),
        # migrations.AddField(
        #     model_name='category',
        #     name='sort_number',
        #     field=models.IntegerField(blank=True, null=True),
        # ),
        # migrations.AddField(
        #     model_name='review',
        #     name='custom_boolean_1',
        #     field=models.BooleanField(default=False),
        # ),
        # migrations.AddField(
        #     model_name='review',
        #     name='custom_text_1',
        #     field=models.TextField(blank=True, null=True),
        # ),
        # migrations.AddField(
        #     model_name='review',
        #     name='custom_text_2',
        #     field=models.TextField(blank=True, null=True),
        # ),
        # migrations.AlterField(
        #     model_name='review',
        #     name='review_round',
        #     field=models.IntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6)], default=1),
        # ),
        # migrations.AlterField(
        #     model_name='category',
        #     name='status',
        #     field=models.CharField(choices=[('A', 'Active'), ('P', 'Pending'), ('I', 'Inactive'), ('H', 'Hidden'), ('S', 'Staff-Use Only'), ('X', 'Marked for Deletion'), ('N', 'Not Complete'), ('C', 'Complete'), ('CA', 'Cancelled')], default='A', max_length=5, verbose_name='visibility status'),
        # ),
        # migrations.AlterField(
        #     model_name='period',
        #     name='status',
        #     field=models.CharField(choices=[('A', 'Active'), ('P', 'Pending'), ('I', 'Inactive'), ('H', 'Hidden'), ('S', 'Staff-Use Only'), ('X', 'Marked for Deletion'), ('N', 'Not Complete'), ('C', 'Complete'), ('CA', 'Cancelled')], default='A', max_length=5, verbose_name='visibility status'),
        # ),
    ]
