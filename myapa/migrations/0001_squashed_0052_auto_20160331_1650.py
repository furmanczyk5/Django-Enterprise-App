# -*- coding: utf-8 -*-
# Generated by Django 1.10.4 on 2016-12-19 17:50
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    # replaces = [('myapa', '0001_squashed_0052_auto_20160331_1650'), ('myapa', '0002_auto_20160415_1702'), ('myapa', '0003_auto_20160415_1920'), ('myapa', '0004_contact_company_fk'), ('myapa', '0005_auto_20160627_0240'), ('myapa', '0006_auto_20160810_2039'), ('myapa', '0007_auto_20161018_1735')]

    initial = True

    dependencies = [
        # ('uploads', '0001_squashed_0003_auto_20161018_1735'),
('uploads', '0001_squashed_0012_auto_20160212_2132'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        # ('content', '0001_squashed_0012_auto_20161018_1735'),
        ('content', '0001_squashed_0064_auto_20160328_1819'),
    ]

    operations = [
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=200, null=True)),
                ('status', models.CharField(choices=[('A', 'Active'), ('P', 'Pending'), ('I', 'Inactive'), ('H', 'Hidden'), ('X', 'Marked for Deletion'), ('N', 'Not Complete'), ('C', 'Complete'), ('CA', 'Cancelled')], default='A', max_length=5, verbose_name='visibility status')),
                ('description', models.TextField(blank=True, null=True)),
                ('slug', models.SlugField(blank=True, help_text='An identifier for the ending of the url - will be auto-generated based on the title for web pages.', null=True)),
                ('created_time', models.DateTimeField(editable=False)),
                ('updated_time', models.DateTimeField(editable=False)),
                ('user_address_num', models.IntegerField(blank=True, null=True)),
                ('address1', models.CharField(blank=True, max_length=40, null=True)),
                ('address2', models.CharField(blank=True, max_length=40, null=True)),
                ('city', models.CharField(blank=True, max_length=40, null=True)),
                ('state', models.CharField(blank=True, max_length=15, null=True)),
                ('zip_code', models.CharField(blank=True, max_length=10, null=True)),
                ('country', models.CharField(blank=True, max_length=20, null=True)),
                ('contact_type', models.CharField(choices=[('INDIVIDUAL', 'Individual'), ('ORGANIZATION', 'Organization')], default='INDIVIDUAL', max_length=50)),
                ('prefix_name', models.CharField(blank=True, max_length=25, null=True, verbose_name='prefix')),
                ('first_name', models.CharField(blank=True, max_length=20, null=True)),
                ('middle_name', models.CharField(blank=True, max_length=20, null=True)),
                ('last_name', models.CharField(blank=True, max_length=30, null=True)),
                ('suffix_name', models.CharField(blank=True, max_length=10, null=True, verbose_name='suffix')),
                ('designation', models.CharField(blank=True, max_length=20, null=True)),
                ('job_title', models.CharField(blank=True, max_length=80, null=True)),
                ('email', models.CharField(blank=True, max_length=100, null=True)),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('cell_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('company', models.CharField(blank=True, max_length=80, null=True)),
                ('bio', models.TextField(blank=True, null=True)),
                ('about_me', models.TextField(blank=True, null=True)),
                ('personal_url', models.URLField(blank=True, max_length=255, null=True)),
                ('linkedin_url', models.URLField(blank=True, max_length=255, null=True)),
                ('facebook_url', models.URLField(blank=True, max_length=255, null=True)),
                ('twitter_url', models.URLField(blank=True, max_length=255, null=True)),
                ('member_title', models.CharField(blank=True, max_length=50, null=True)),
                ('member_type', models.CharField(blank=True, max_length=5, null=True)),
                ('instructor_id', models.CharField(blank=True, max_length=15, null=True)),
                ('ein_number', models.CharField(blank=True, max_length=15, null=True)),
                ('organization_type', models.CharField(blank=True, choices=[('NONPROFIT', 'Non-profit Organization'), ('TRAINING', 'Professional Training Service'), ('GOV', 'Government Entity'), ('PRIVATE', 'Private Firm'), ('ACADEMIC', 'University/Academic Institution')], max_length=20, null=True)),
                ('company_is_apa', models.BooleanField(default=False)),
                ('instagram_url', models.URLField(blank=True, max_length=255, null=True)),
                ('ecp_type', models.CharField(blank=True, choices=[('ECP1', 'ECP1'), ('ECP2', 'ECP2'), ('ECP3', 'ECP3'), ('ECP4', 'ECP4'), ('ECP5', 'ECP5')], max_length=5, null=True)),
                ('salary_range', models.CharField(blank=True, choices=[('A', 'Under $42,000'), ('C', '$42,000 - $49,999'), ('D', '$50,000 - $59,999'), ('E', '$60,000 - $69,999'), ('F', '$70,000 - $79,999'), ('G', '$80,000 - $89,999'), ('H', '$90,000 - $99,999'), ('I', '$100,000 - $119,999'), ('J', 'Undisclosed'), ('K', 'US Student Member'), ('L', 'US New Professional'), ('M', 'US Planning Brd Member'), ('N', 'US Retired Member'), ('O', 'US Life Member'), ('AA', 'INT AA'), ('BB', 'INT BB'), ('CC', 'INT CC'), ('KK', 'INT Student Member'), ('LL', 'INT New Professional'), ('NN', 'INT Retired Member'), ('OO', 'INT Life Member')], max_length=5, null=True)),
                ('pas_type', models.CharField(blank=True, choices=[('A', 'Municipal under 25,000'), ('B', 'Municipal 25,000 - 99,999'), ('C', 'Municipal 100,000 - 249,999'), ('D', 'Municipal 250,000- 750,000'), ('E', 'Municipal over 750,000'), ('F', 'Areawide under 100,000'), ('G', 'Areawide 100,000 - 249,999'), ('H', 'Areawide 250,000 - 499,999'), ('I', 'Areawide 500,000 - 1 Million'), ('J', 'Areawide over 1 Million'), ('K', 'State or Federal'), ('L', 'NonProfit under $1 Million'), ('M', 'NonProfit $1  - $10 Million'), ('N', 'NonProfit over $10 Million'), ('O', 'Private Firm Staff Size under 5'), ('P', 'Private Firm Staff Size 5 - 50'), ('Q', 'Private Firm Staff Size over 50'), ('R', 'University or Library'), ('S', 'Complimentary/Exchange')], max_length=10, null=True)),
                ('olduser_id', models.CharField(blank=True, help_text="Contact's Imis Id", max_length=10)),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('chapter', models.CharField(max_length=15, null=True, blank=True, choices=[('AK', 'Alaska Chapter'), ('AL', 'Alabama Chapter'), ('AR', 'Arkansas Chapter'), ('AZ', 'Arizona Chapter'), ('CAC', 'California Central Section'), ('CACC', 'California Central Coast Section'), ('CAIE', 'California Inland Empire Section'), ('CAL', 'California Los Angeles Section'), ('CAN', 'California Northern Section'), ('CAO', 'California Orange Section'), ('CAS', 'California Sacramento Valley Section'), ('CASD', 'California San Diego Section'), ('CO', 'Colorado Chapter'), ('CT', 'Connecticut Chapter'), ('DE', 'Delaware Chapter'), ('FL', 'Florida Chapter'), ('GA', 'Georgia Chapter'), ('HI', 'Hawaii Chapter'), ('IA', 'Iowa Chapter'), ('ID', 'Idaho Chapter'), ('IL', 'Illinois Chapter'), ('IN', 'Indiana Chapter'), ('KS', 'Kansas Chapter'), ('KY', 'Kentucky Chapter'), ('LA', 'Louisiana Chapter'), ('MA', 'Massachusetts Chapter'), ('MD', 'Maryland Chapter'), ('MI', 'Michigan Chapter'), ('MN', 'Minnesota Chapter'), ('MO', 'Missouri Chapter'), ('MS', 'Mississippi Chapter'), ('NATC', 'National Capital Chapter'), ('NC', 'North Carolina Chapter'), ('NE', 'Nebraska Chapter'), ('NJ', 'New Jersey Chapter'), ('NM', 'New Mexico Chapter'), ('NNE', 'Northern New England Chapter'), ('NV', 'Nevada Chapter'), ('NYM', 'New York Metro Chapter'), ('NYU', 'New York Upstate Chapter'), ('OH', 'Ohio Chapter'), ('OK', 'Oklahoma Chapter'), ('OR', 'Oregon Chapter'), ('PA', 'Pennsylvania Chapter'), ('RI', 'Rhode Island Chapter'), ('SC', 'South Carolina Chapter'), ('TN', 'Tennessee Chapter'), ('TX', 'Texas Chapter'), ('UT', 'Utah Chapter'), ('VA', 'Virginia Chapter'), ('WA', 'Washington Chapter'), ('WC', 'Western Central Chapter'), ('WI', 'Wisconsin Chapter'), ('WV', 'West Virginia Chapter')])),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='myapa_contact_updated_by', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='myapa_contact_created_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='IndividualContact',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('myapa.contact',),
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('myapa.contact',),
        ),
        migrations.CreateModel(
            name='School',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('myapa.organization',),
        ),
        migrations.CreateModel(
            name='ContactRole',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role_type', models.CharField(choices=[('AUTHOR', 'Author'), ('SPEAKER', 'Speaker'), ('ORGANIZER', 'Organizer / Coordinator'), ('PROPOSER', 'Proposer / Nominator'), ('PUBLISHER', 'Publisher'), ('PROVIDER', 'Provider'), ('PHOTOGRAPHER', 'Photographer')], max_length=50)),
                ('sort_number', models.PositiveIntegerField(blank=True, null=True)),
                ('confirmed', models.BooleanField(default=False)),
                ('invitation_sent', models.BooleanField(default=False)),
                ('content_rating', models.IntegerField(blank=True, null=True)),
                ('content', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contactrole', to='content.Content')),
                ('permission_av', models.CharField(choices=[('NO_RESPONSE', '--'), ('PERMISSION_AUTHORIZED', 'Permission Authorized'), ('PERMISSION_DENIED', 'Permission Denied')], default='NO_RESPONSE', max_length=50)),
                ('permission_content', models.CharField(choices=[('NO_RESPONSE', '--'), ('PERMISSION_AUTHORIZED', 'Permission Authorized'), ('PERMISSION_DENIED', 'Permission Denied')], default='NO_RESPONSE', max_length=50)),
                ('special_status', models.CharField(blank=True, choices=[('GUEST_NOT_REQUESTED', 'No Request'), ('GUEST_REQUESTED', 'Conference Guest Registration Requested'), ('GUEST_APPROVED', 'Conference Guest Registration Approved'), ('GUEST_DENIED', 'Conference Guest Registration Denied')], max_length=50, null=True)),
                ('publish_uuid', models.CharField(blank=True, default=uuid.uuid4, max_length=36, null=True)),
                ('zip_code', models.CharField(blank=True, max_length=10, null=True)),
                ('user_address_num', models.IntegerField(blank=True, null=True)),
                ('state', models.CharField(blank=True, max_length=15, null=True)),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('email', models.CharField(blank=True, max_length=100, null=True)),
                ('country', models.CharField(blank=True, max_length=20, null=True)),
                ('company', models.CharField(blank=True, max_length=80, null=True)),
                ('city', models.CharField(blank=True, max_length=40, null=True)),
                ('cell_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('address2', models.CharField(blank=True, max_length=40, null=True)),
                ('address1', models.CharField(blank=True, max_length=40, null=True)),
                ('contact', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='contactrole', to='myapa.Contact')),
                ('middle_name', models.CharField(blank=True, max_length=20, null=True)),
                ('last_name', models.CharField(blank=True, max_length=30, null=True)),
                ('first_name', models.CharField(blank=True, max_length=20, null=True)),
                ('bio', models.TextField(blank=True, null=True)),
                ('published_time', models.DateTimeField(blank=True, editable=False, null=True)),
                ('publish_time', models.DateTimeField(blank=True, null=True, verbose_name='publish time')),
                ('published_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='myapa_contactrole_published_by', to=settings.AUTH_USER_MODEL)),
                ('publish_status', models.CharField(choices=[('DRAFT', 'Draft'), ('PUBLISHED', 'Published'), ('SUBMISSION', 'Submission'), ('EARLY_RESUBMISSION', 'Early Resubmission')], default='DRAFT', max_length=50)),
            ],
            options={
                'verbose_name': 'contributor',
                'ordering': ['content', 'sort_number'],
            },
        ),
        migrations.AddField(
            model_name='contact',
            name='content',
            field=models.ManyToManyField(related_name='contacts', through='myapa.ContactRole', to='content.Content'),
        ),
        migrations.CreateModel(
            name='ContactContentAdded',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('added_type', models.CharField(choices=[('SCHEDULE', 'Conference Schedule'), ('BOOKMARK', 'My APA Bookmark'), ('EVENT_LOGGED', 'Logged/Evaluated Event or Activity'), ('WISHLIST', 'Wishlist')], default='BOOKMARK', max_length=50)),
                ('added_time', models.DateTimeField(editable=False)),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contactcontentadded', to='myapa.Contact')),
                ('content', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contactcontentadded', to='content.Content')),
                ('comments', models.TextField(blank=True, null=True)),
                ('rating', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.AddField(
            model_name='contact',
            name='content_added',
            field=models.ManyToManyField(related_name='contacts_who_added', through='myapa.ContactContentAdded', to='content.Content'),
        ),
        migrations.CreateModel(
            name='UserAuthorizationToken',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(max_length=50)),
                ('created_time', models.DateTimeField(editable=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='authorizationtoken', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ContactRelationship',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('relationship_type', models.CharField(choices=[('ADMINISTRATOR', 'Organization admin'), ('BILLING_I', 'Organization billing contact'), ('FSMA', 'Free Student Admin')], max_length=50)),
                ('source', models.ForeignKey(help_text='the related organization', on_delete=django.db.models.deletion.CASCADE, related_name='contactrelationship_as_source', to='myapa.Contact')),
                ('target', models.ForeignKey(help_text='the related individual', on_delete=django.db.models.deletion.CASCADE, related_name='contactrelationship_as_target', to='myapa.Contact')),
            ],
        ),
        migrations.AddField(
            model_name='contact',
            name='related_contacts',
            field=models.ManyToManyField(related_name='related_contact_sources', through='myapa.ContactRelationship', to='myapa.Contact'),
        ),
        migrations.CreateModel(
            name='Provider',
            fields=[
            ],
            options={
                'proxy': True,
                'verbose_name': 'CM Provider',
                'verbose_name_plural': 'CM Providers',
            },
            bases=('myapa.contact',),
        ),
        migrations.CreateModel(
            name='EducationalDegree',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('other_school', models.CharField(blank=True, max_length=80, null=True)),
                ('graduation_date', models.DateField(blank=True, null=True)),
                ('level', models.CharField(choices=[('B', 'Undergraduate'), ('M', 'Graduate'), ('P', 'PhD/J.D.'), ('O', 'Other Degree')], max_length=50)),
                ('is_planning', models.BooleanField(default=False)),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapa.IndividualContact')),
                ('school', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='educational_degree', to='myapa.School')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='JobHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=200, null=True)),
                ('company', models.CharField(blank=True, max_length=80, null=True)),
                ('city', models.CharField(blank=True, max_length=40, null=True)),
                ('state', models.CharField(blank=True, max_length=15, null=True)),
                ('zip_code', models.CharField(blank=True, max_length=10, null=True)),
                ('country', models.CharField(blank=True, max_length=20, null=True)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('is_current', models.BooleanField(default=True)),
                ('is_part_time', models.BooleanField(default=False)),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapa.IndividualContact')),
            ],
            options={
                'verbose_name': 'job',
                'verbose_name_plural': 'job history',
            },
        ),
        migrations.CreateModel(
            name='Bookmark',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('myapa.contactcontentadded',),
        ),
        migrations.CreateModel(
            name='IndividualProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(blank=True, null=True)),
                ('share_profile', models.CharField(choices=[('PRIVATE', 'Private'), ('PUBLIC', 'Public'), ('MEMBER', 'Visible only to other members')], default='MEMBER', help_text='If you choose “Private,” your profile is not included in the APA Member Directory. \n                Only you may view your profile, even if someone else knows your profile’s URL.\n                <br/><br/>\n                If you choose “Visible only to other members,” your profile is included in the APA Member Directory, \n                which is accessible only to APA members. Any APA member may view your profile by searching the APA member \n                directory or by using your profile’s URL.\n                <br/><br/>\n                If you choose “Public,” your profile is included in the APA Member Directory. \n                Additionally, anyone who has your profile’s URL - APA member or not - may view your profile.', max_length=50)),
                ('share_contact', models.CharField(choices=[('PRIVATE', 'Private'), ('PUBLIC', 'Public'), ('MEMBER', 'Visible only to other members')], default='MEMBER', max_length=50)),
                ('share_bio', models.CharField(choices=[('PRIVATE', 'Private'), ('PUBLIC', 'Public'), ('MEMBER', 'Visible only to other members')], default='MEMBER', max_length=50)),
                ('share_social', models.CharField(choices=[('PRIVATE', 'Private'), ('PUBLIC', 'Public'), ('MEMBER', 'Visible only to other members')], default='MEMBER', max_length=50)),
                ('share_leadership', models.CharField(choices=[('PRIVATE', 'Private'), ('PUBLIC', 'Public'), ('MEMBER', 'Visible only to other members')], default='MEMBER', max_length=50)),
                ('share_education', models.CharField(choices=[('PRIVATE', 'Private'), ('PUBLIC', 'Public'), ('MEMBER', 'Visible only to other members')], default='MEMBER', max_length=50)),
                ('share_jobs', models.CharField(choices=[('PRIVATE', 'Private'), ('PUBLIC', 'Public'), ('MEMBER', 'Visible only to other members')], default='MEMBER', max_length=50)),
                ('share_events', models.CharField(choices=[('PRIVATE', 'Private'), ('PUBLIC', 'Public'), ('MEMBER', 'Visible only to other members')], default='MEMBER', max_length=50)),
                ('share_resume', models.CharField(choices=[('PRIVATE', 'Private'), ('PUBLIC', 'Public'), ('MEMBER', 'Visible only to other members')], default='MEMBER', max_length=50)),
                ('share_conference', models.CharField(choices=[('PRIVATE', 'Private'), ('PUBLIC', 'Public'), ('MEMBER', 'Visible only to other members')], default='MEMBER', max_length=50)),
                ('share_advocacy', models.CharField(choices=[('PRIVATE', 'Private'), ('PUBLIC', 'Public'), ('MEMBER', 'Visible only to other members')], default='MEMBER', max_length=50)),
                ('contact', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='myapa.Contact')),
                ('image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='individual_profile', to='uploads.ImageUpload')),
                ('resume', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='uploads.DocumentUpload')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OrganizationProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('principals', models.CharField(blank=True, max_length=1000, null=True)),
                ('number_of_staff', models.IntegerField(blank=True, null=True)),
                ('number_of_planners', models.IntegerField(blank=True, null=True)),
                ('number_of_aicp_members', models.IntegerField(blank=True, null=True)),
                ('date_founded', models.DateField(blank=True, null=True)),
                ('consultant_listing_until', models.DateTimeField(blank=True, null=True)),
                ('contact', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='myapa.Contact')),
                ('image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='uploads.ImageUpload')),
                ('research_inquiry_hours', models.IntegerField(help_text='Total inquiry hours purchased', null=True, blank=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='contact',
            name='code',
            field=models.CharField(blank=True, max_length=200, null=True),
        ),
        migrations.AddField(
            model_name='contact',
            name='address_type',
            field=models.CharField(blank=True, choices=[('HOME', 'Home Address'), ('WORK', 'Work Address')], max_length=20, null=True),
        ),
        migrations.CreateModel(
            name='ContactTagType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('published_time', models.DateTimeField(blank=True, editable=False, null=True)),
                ('publish_time', models.DateTimeField(blank=True, null=True, verbose_name='publish time')),
                ('publish_status', models.CharField(choices=[('DRAFT', 'Draft'), ('PUBLISHED', 'Published'), ('SUBMISSION', 'Submission'), ('EARLY_RESUBMISSION', 'Early Resubmission')], default='DRAFT', max_length=50)),
                ('publish_uuid', models.CharField(blank=True, default=uuid.uuid4, max_length=36, null=True)),
            ],
            options={
                'verbose_name': 'additional type of tag (contacts)',
                'verbose_name_plural': 'additional tagging (contacts)',
            },
        ),
        migrations.AddField(
            model_name='contact',
            name='parent_organization',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='branchoffice', to='myapa.Organization', verbose_name='parent organization'),
        ),
        migrations.AlterField(
            model_name='contact',
            name='organization_type',
            field=models.CharField(blank=True, choices=[('NONPROFIT', 'Non-profit Organization'), ('TRAINING', 'Professional Training Service'), ('GOV', 'Government Entity'), ('PRIVATE', 'Private Firm'), ('ACADEMIC', 'University/Academic Institution'), ('CONSULTANT', 'Consultant')], max_length=20, null=True),
        ),
        migrations.AlterField(
            model_name='contact',
            name='salary_range',
            field=models.CharField(blank=True, choices=[('A', 'Under $42,000'), ('C', '$42,000 - $49,999'), ('D', '$50,000 - $59,999'), ('E', '$60,000 - $69,999'), ('F', '$70,000 - $79,999'), ('G', '$80,000 - $89,999'), ('H', '$90,000 - $99,999'), ('I', '$100,000 - $119,999'), ('P', '$120,000 and above'), ('J', 'Undisclosed'), ('K', 'US Student Member'), ('L', 'US New Professional'), ('M', 'US Planning Brd Member'), ('N', 'US Retired Member'), ('O', 'US Life Member'), ('AA', 'INT AA'), ('BB', 'INT BB'), ('CC', 'INT CC'), ('KK', 'INT Student Member'), ('LL', 'INT New Professional'), ('NN', 'INT Retired Member'), ('OO', 'INT Life Member')], max_length=5, null=True),
        ),
        migrations.AddField(
            model_name='contacttagtype',
            name='contact',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contacttagtype', to='myapa.Contact'),
        ),
        migrations.AddField(
            model_name='contacttagtype',
            name='published_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='myapa_contacttagtype_published_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='contacttagtype',
            name='tag_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contacttagtype', to='content.TagType'),
        ),
        migrations.AddField(
            model_name='contacttagtype',
            name='tags',
            field=models.ManyToManyField(blank=True, to='content.Tag'),
        ),
        migrations.AddField(
            model_name='contact',
            name='tag_types',
            field=models.ManyToManyField(blank=True, through='myapa.ContactTagType', to='content.TagType'),
        ),
        migrations.AddField(
            model_name='contact',
            name='company_fk',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='contacts', to='myapa.Organization', verbose_name='linked organization'),
        ),
        migrations.AlterField(
            model_name='contact',
            name='status',
            field=models.CharField(choices=[('A', 'Active'), ('P', 'Pending'), ('I', 'Inactive'), ('H', 'Hidden'), ('S', 'Staff-Use Only'), ('X', 'Marked for Deletion'), ('N', 'Not Complete'), ('C', 'Complete'), ('CA', 'Cancelled')], default='A', max_length=5, verbose_name='visibility status'),
        ),
    ]
